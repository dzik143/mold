# https://pubs.opengroup.org/onlinepubs/7908799/xsh/stdio.h.html
/*
void     clearerr(FILE *);
char    *ctermid(char *);
char    *cuserid(char *);(LEGACY)
int      fclose(FILE *);
FILE    *fdopen(int, const char *);
int      feof(FILE *);
int      ferror(FILE *);
int      fflush(FILE *);
int      fgetc(FILE *);
int      fgetpos(FILE *, fpos_t *);
char    *fgets(char *, int, FILE *);
int      fileno(FILE *);
void     flockfile(FILE *);
FILE    *fopen(const char *, const char *);
int      fprintf(FILE *, const char *, ...);
int      fputc(int, FILE *);
int      fputs(const char *, FILE *);
size_t   fread(void *, size_t, size_t, FILE *);
FILE    *freopen(const char *, const char *, FILE *);
int      fscanf(FILE *, const char *, ...);
int      fseek(FILE *, long int, int);
int      fseeko(FILE *, off_t, int);
int      fsetpos(FILE *, const fpos_t *);
long int ftell(FILE *);
off_t    ftello(FILE *);
int      ftrylockfile(FILE *);
void     funlockfile(FILE *);
size_t   fwrite(const void *, size_t, size_t, FILE *);
int      getc(FILE *);
int      getchar(void);
int      getc_unlocked(FILE *);
int      getchar_unlocked(void);
int      getopt(int, char * const[], const char); (LEGACY)
char    *gets(char *);
int      getw(FILE *);
int      pclose(FILE *);
void     perror(const char *);
FILE    *popen(const char *, const char *);
int      printf(const char *, ...);
int      putc(int, FILE *);
int      putchar(int);
int      putc_unlocked(int, FILE *);
int      putchar_unlocked(int);
int      puts(const char *);
int      putw(int, FILE *);
int      remove(const char *);
int      rename(const char *, const char *);
void     rewind(FILE *);
int      scanf(const char *, ...);
void     setbuf(FILE *, char *);
int      setvbuf(FILE *, char *, int, size_t);
int      snprintf(char *, size_t, const char *, ...);
int      sprintf(char *, const char *, ...);
int      sscanf(const char *, const char *, int ...);
char    *tempnam(const char *, const char *);
FILE    *tmpfile(void);
char    *tmpnam(char *);
int      ungetc(int, FILE *);
int      vfprintf(FILE *, const char *, va_list);
int      vprintf(const char *, va_list);
int      vsnprintf(char *, size_t, const char *, va_list);
int      vsprintf(char *, const char *, va_list);
*/

# void     clearerr(FILE *);
# char    *ctermid(char *);
# char    *cuserid(char *);(LEGACY)

# int      fclose(FILE *);

close(f)

# FILE    *fdopen(int, const char *);
# int      feof(FILE *);
# int      ferror(FILE *);
# int      fflush(FILE *);
# int      fgetc(FILE *);

read from f values int8 to c

# int      fgetpos(FILE *, fpos_t *);

read from f properties position

# char    *fgets(char *, int, FILE *);

read from f values x

# int      fileno(FILE *);
# void     flockfile(FILE *);

# FILE    *fopen(const char *, const char *);

f = open('test.txt')

# int      fprintf(FILE *, const char *, ...);

write to f values x, y, z

# int      fputc(int, FILE *);

write to f values x as int8

# int      fputs(const char *, FILE *);

write to f values x

# size_t   fread(void *, size_t, size_t, FILE *);

read from f values int8[size] to data

# FILE    *freopen(const char *, const char *, FILE *);

# int      fscanf(FILE *, const char *, ...);

read from f values integer to x

# int      fseek(FILE *, long int, int);
# int      fseeko(FILE *, off_t, int);
# int      fsetpos(FILE *, const fpos_t *);
# long int ftell(FILE *);
# off_t    ftello(FILE *);
# int      ftrylockfile(FILE *);
# void     funlockfile(FILE *);
# size_t   fwrite(const void *, size_t, size_t, FILE *);
# int      getc(FILE *);

read from stdin values int8 to x

# int      getchar(void);

read from stdin values int8 to x

#int      getc_unlocked(FILE *);
#int      getchar_unlocked(void);
#int      getopt(int, char * const[], const char); (LEGACY)
#char    *gets(char *);
#int      getw(FILE *);
int      pclose(FILE *);
void     perror(const char *);
FILE    *popen(const char *, const char *);
int      printf(const char *, ...);
int      putc(int, FILE *);
int      putchar(int);
int      putc_unlocked(int, FILE *);
int      putchar_unlocked(int);
int      puts(const char *);
int      putw(int, FILE *);
int      remove(const char *);
int      rename(const char *, const char *);
void     rewind(FILE *);
int      scanf(const char *, ...);
void     setbuf(FILE *, char *);
int      setvbuf(FILE *, char *, int, size_t);
int      snprintf(char *, size_t, const char *, ...);
int      sprintf(char *, const char *, ...);
int      sscanf(const char *, const char *, int ...);
char    *tempnam(const char *, const char *);
FILE    *tmpfile(void);
char    *tmpnam(char *);
int      ungetc(int, FILE *);
int      vfprintf(FILE *, const char *, va_list);
int      vprintf(const char *, va_list);
int      vsnprintf(char *, size_t, const char *, va_list);
int      vsprintf(char *, const char *, va_list);
