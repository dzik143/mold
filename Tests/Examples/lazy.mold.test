TEST "Lazy boolean expressions"

function getTrue() -> rv
  print "getTrue() called"
  rv = true
endfunction

function getFalse() -> rv
  print "getFalse() called"
  rv = false
endfunction

#
# Lazy or
#

print 'false or false'
rv = getFalse() or getFalse()
print ""

print 'false or true'
rv = getFalse() or getTrue()
print ""

print 'true or false'
rv = getTrue() or getFalse()
print ""

print 'true or true'
rv = getTrue() or getTrue()
print ""

#
# Lazy and
#

print 'false and false'
rv = getFalse() and getFalse()
print ""

print 'false and true'
rv = getFalse() and getTrue()
print ""

print 'true and false'
rv = getTrue() and getFalse()
print ""

print 'true and true'
rv = getTrue() and getTrue()

EXPECTED_OUTPUT:
false or false
getFalse() called
getFalse() called

false or true
getFalse() called
getTrue() called

true or false
getTrue() called

true or true
getTrue() called

false and false
getFalse() called

false and true
getFalse() called

true and false
getTrue() called
getFalse() called

true and true
getTrue() called
getTrue() called
--------------------------------------------------------------------------------

TEST "Lazy foo() and/or inline expression"

function foo(x) -> rv
  rv = x
endfunction

#
# foo() and inline expression
#

print 'foo() and inline expression'
print '==========================='

if foo(true) and (1 is 1)
  print 'foo(true) and (1 is 1)'
endif

if foo(true) and (1 is 2)
  print 'foo(true) and (1 is 2)'
endif

if foo(false) and (1 is 1)
  print 'foo(false) and (1 is 1)'
endif

if foo(false) and (1 is 2)
  print 'foo(false) and (1 is 2)'
endif

#
# foo() or inline expression
#

print ''
print 'foo() or inline expression'
print '=========================='

if foo(true) or (1 is 1)
  print 'foo(true) or (1 is 1)'
endif

if foo(true) or (1 is 2)
  print 'foo(true) or (1 is 2)'
endif

if foo(false) or (1 is 1)
  print 'foo(false) or (1 is 1)'
endif

if foo(false) or (1 is 2)
  print 'foo(false) or (1 is 2)'
endif

#
# inline expression and foo()
#

print ''
print 'inline expression and foo()'
print '==========================='

if (1 is 1) and foo(true)
  print '(1 is 1) and foo(true)'
endif

if (1 is 2) and foo(true)
  print '(1 is 2) and foo(true)'
endif

if (1 is 1) and foo(false)
  print '(1 is 1) and foo(false)'
endif

if (1 is 2) and foo(false)
  print '(1 is 2) and foo(false)'
endif

#
# inline expression or foo()
#

print ''
print 'inline expression or foo()'
print '=========================='

if (1 is 1) or foo(true)
  print '(1 is 1) or foo(true)'
endif

if (1 is 2) or foo(true)
  print '(1 is 2) or foo(true)'
endif

if (1 is 1) or foo(false)
  print '(1 is 1) or foo(false)'
endif

if (1 is 2) or foo(false)
  print '(1 is 2) or foo(false)'
endif

EXPECTED_OUTPUT:
foo() and inline expression
===========================
foo(true) and (1 is 1)

foo() or inline expression
==========================
foo(true) or (1 is 1)
foo(true) or (1 is 2)
foo(false) or (1 is 1)

inline expression and foo()
===========================
(1 is 1) and foo(true)

inline expression or foo()
==========================
(1 is 1) or foo(true)
(1 is 2) or foo(true)
(1 is 1) or foo(false)
-------------------------------------------------------------------------------
