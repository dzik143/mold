TEST "Simple while"
x = 10
while x > 0
  x = x - 1
  print x
endwhile

EXPECTED_OUTPUT:
9
8
7
6
5
4
3
2
1
0
-------------------------------------------------------------------------------

TEST "Simple for"
for x in 0..10
  print x
endfor

EXPECTED_OUTPUT:
0
1
2
3
4
5
6
7
8
9
-------------------------------------------------------------------------------

TEST "Nested for loops"
for x in 0..2
  for y in 0..2
    for z in 0..2
      print x, y, z
    endfor
  endfor
endfor

EXPECTED_OUTPUT:
0 0 0
0 0 1
0 1 0
0 1 1
1 0 0
1 0 1
1 1 0
1 1 1
-------------------------------------------------------------------------------

TEST "Huge for loop"
acc = 0
for x in 0..12345
  acc = acc + 1
endfor
print acc

EXPECTED_OUTPUT:
12345
-------------------------------------------------------------------------------

TEST "Huge while loop"
acc = 0
x   = 12345
while x > 0
  acc = acc + 1
  x   = x - 1
endwhile
print acc

EXPECTED_OUTPUT:
12345
-------------------------------------------------------------------------------

TEST "Bug: Unterminated for if valueBegin greater to valueEnd"

print 'Before for'
for idx in 10 .. 0
  print idx
endfor
print 'After for'

EXPECTED_OUTPUT:
Before for
After for
-------------------------------------------------------------------------------

TEST "Process array inside while loop"

x   = [1,2,3,4,5,6,7,8,9,10]
acc = 0
idx = 0

while idx < 10
  acc = 5 * acc + x[idx]
  idx = idx + 1
endwhile

print acc

EXPECTED_OUTPUT:
3051755
-------------------------------------------------------------------------------

TEST "Attemp to use already defined variable as iterator (should fail)"

function foo(idx, n)
  print 'foo(', idx, n, ')'
  for idx in 0 .. n
    print idx
  endfor
endfunction

foo(0, 10)

EXPECTED_ERROR:
./temp/source.mold:4:10: error: 'idx' cannot be used as iterator
-------------------------------------------------------------------------------

TEST "Bug: Crash when iterator used in another branch as non-integer"

function foo(x)
  if x is 1
   # idx is array in this context.
   idx    = []
   idx[0] = 1234
   print idx

  else
    # idx is integer in this context.
    for idx in 0 .. 10
      print idx
    endfor
  endif
endfunction

foo(1)
foo(2)

EXPECTED_ERROR:
./temp/source.mold:12:16: error: attempted to use 'idx' as integer; it was used as array before
-------------------------------------------------------------------------------
