TEST "Imm arthmetic"

# integer x integer
print 'integer x integer'
print '4 * 3 =', 4 * 3
print '4 + 3 =', 4 + 3
print '4 - 3 =', 4 - 3
print '4 / 3 =', 4 / 3
print '4 // 3 =', 4 // 3

# float x float
print 'float x float'
print '4.1 * 3.2 =', 4.1 * 3.2
print '4.1 + 3.2 =', 4.1 + 3.2
print '4.1 - 3.2 =', 4.1 - 3.2
print '4.1 / 3.2 =', 4.1 / 3.2
print '4.1 // 3.2 =', 4.1 // 3.2

# string x string
print 'abc + def =', 'abc' + 'def'

EXPECTED_OUTPUT:
print 'integer x integer'
print '4 * 3 = 12'
print '4 + 3 = 7'
print '4 - 3 = 1'
print '4 / 3 = 1.333333'
print '4 // 3 = 1'

print 'float x float'
print '4.1 * 3.2 = 13.120000'
print '4.1 + 3.2 = 7.300000'
print '4.1 - 3.2 = 0.900000'
print '4.1 / 3.2 = 1.281250'
print '4.1 // 3.2 = 1'

print 'abc + def = abcdef'

--------------------------------------------------------------------------------

TEST "Const arithmetic"

x = 1
y = 2
z = x + y

EXPECTED_OUTPUT:
x = 1
y = 2
z = 3

--------------------------------------------------------------------------------

TEST "len(imm)"

print 'len(1)             =', len(1)
print 'len(3.14)          =', len(3.14)
print 'len(true)          =', len(true)
print 'len(false)         =', len(false)
print 'len("text")        =', len('text')
print 'len([])            =', len([])           
print 'len([1,2,3,4])     =', len([1, 2, 3, 4])
print 'len({})            =', len({})
print 'len({"a":1,"b":2}) =', len({'a': 1, 'b': 2})

EXPECTED_OUTPUT:
print 'len(1)             = 1'
print 'len(3.14)          = 1'
print 'len(true)          = 1'
print 'len(false)         = 1'
print 'len("text")        = 4'
print 'len([])            = 0'
print 'len([1,2,3,4])     = 4'
print 'len({})            = 0'
print 'len({"a":1,"b":2}) = 2'

--------------------------------------------------------------------------------

TEST "str(imm)"

print 'str(1)             =', str(1)
print 'str(3.14)          =', str(3.14)
print 'str(true)          =', str(true)
print 'str(false)         =', str(false)
print 'str("text")        =', str('text')
print 'str([])            =', str([])           
print 'str([1,2,3,4])     =', str([1, 2, 3, 4])
print 'str({})            =', str({})
print 'str({"a":1,"b":2}) =', str({'a': 1, 'b': 2})

EXPECTED_OUTPUT:
print 'str(1)             = 1'
print 'str(3.14)          = 3.140000'
print 'str(true)          = true'
print 'str(false)         = false'
print 'str("text")        = text'
print 'str([])            = [array]'
print 'str([1,2,3,4])     = [array]'
print 'str({})            = [map]'
print 'str({"a":1,"b":2}) = [map]'

--------------------------------------------------------------------------------

TEST "typeof(imm)"

print 'typeof(1)             =', typeof(1)
print 'typeof(3.14)          =', typeof(3.14)
print 'typeof(true)          =', typeof(true)
print 'typeof(false)         =', typeof(false)
print 'typeof("text")        =', typeof('text')
print 'typeof([])            =', typeof([])
print 'typeof([1,2,3,4])     =', typeof([1, 2, 3, 4])
print 'typeof({})            =', typeof({})
print 'typeof({"a":1,"b":2}) =', typeof({'a': 1, 'b': 2})

EXPECTED_OUTPUT:
print 'typeof(1)             = integer'
print 'typeof(3.14)          = float'
print 'typeof(true)          = boolean'
print 'typeof(false)         = boolean'
print 'typeof("text")        = string'
print 'typeof([])            = array'
print 'typeof([1,2,3,4])     = array'
print 'typeof({})            = map'
print 'typeof({"a":1,"b":2}) = map'
