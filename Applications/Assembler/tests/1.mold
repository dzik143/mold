  # ------------------------------------------------------------------------------
  # Original mnemonics from 8086 processor.
  # Please note that this is mnemonics, not a opcodes list.
  # For example, with a few exceptions, only 16-bit operands were
  # available in original 8086.
  # Jumps and calls are moved to core-jumps group.
  #-----------------------------------------------------------------------------

  # aaa     invalid in 64-bit mode
  # aad     invalid in 64-bit mode
  # aam     invalid in 64-bit mode
  # lahf    invalid in 64-bit mode
  # aas     invalid in 64-bit mode
  # das     invalid in 64-bit mode
  # sahf    invalid in 64-bit mode
  # lds     invalid in 64-bit mode
  # les     invalid in 64-bit mode
  # daa     invalid in 64-bit mode
  # into    invalid in 64-bit mode
  method adc_r_r(regDst, regSrc)
    die('not implemented: adc r,r')
  endmethod

  method adc_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: adc r,m')
  endmethod

  method adc_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: adc m,r')
  endmethod

  method adc_r_imm(regDst, imm)
    die('not implemented: adc r,imm')
  endmethod

  method adc_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: adc m,imm')
  endmethod

  method add_r_r(regDst, regSrc)
    die('not implemented: add r,r')
  endmethod

  method add_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: add r,m')
  endmethod

  method add_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: add m,r')
  endmethod

  method add_r_imm(regDst, imm)
    die('not implemented: add r,imm')
  endmethod

  method add_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: add m,imm')
  endmethod

  method and_r_r(regDst, regSrc)
    die('not implemented: and r,r')
  endmethod

  method and_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: and r,m')
  endmethod

  method and_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: and m,r')
  endmethod

  method and_r_imm(regDst, imm)
    die('not implemented: and r,imm')
  endmethod

  method and_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: and m,imm')
  endmethod

  method cmp_r_r(regDst, regSrc)
    die('not implemented: cmp r,r')
  endmethod

  method cmp_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmp r,m')
  endmethod

  method cmp_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: cmp m,r')
  endmethod

  method cmp_r_imm(regDst, imm)
    die('not implemented: cmp r,imm')
  endmethod

  method cmp_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: cmp m,imm')
  endmethod

  method or_r_r(regDst, regSrc)
    die('not implemented: or r,r')
  endmethod

  method or_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: or r,m')
  endmethod

  method or_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: or m,r')
  endmethod

  method or_r_imm(regDst, imm)
    die('not implemented: or r,imm')
  endmethod

  method or_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: or m,imm')
  endmethod

  method sbb_r_r(regDst, regSrc)
    die('not implemented: sbb r,r')
  endmethod

  method sbb_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: sbb r,m')
  endmethod

  method sbb_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: sbb m,r')
  endmethod

  method sbb_r_imm(regDst, imm)
    die('not implemented: sbb r,imm')
  endmethod

  method sbb_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: sbb m,imm')
  endmethod

  method sub_r_r(regDst, regSrc)
    die('not implemented: sub r,r')
  endmethod

  method sub_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: sub r,m')
  endmethod

  method sub_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: sub m,r')
  endmethod

  method sub_r_imm(regDst, imm)
    die('not implemented: sub r,imm')
  endmethod

  method sub_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: sub m,imm')
  endmethod

  method test_r_r(regDst, regSrc)
    die('not implemented: test r,r')
  endmethod

  method test_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: test r,m')
  endmethod

  method test_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: test m,r')
  endmethod

  method test_r_imm(regDst, imm)
    die('not implemented: test r,imm')
  endmethod

  method test_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: test m,imm')
  endmethod

  method xor_r_r(regDst, regSrc)
    die('not implemented: xor r,r')
  endmethod

  method xor_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: xor r,m')
  endmethod

  method xor_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: xor m,r')
  endmethod

  method xor_r_imm(regDst, imm)
    die('not implemented: xor r,imm')
  endmethod

  method xor_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: xor m,imm')
  endmethod

  method rcl_r_cl(regDst)
    die('not implemented: rcl r,cl')
  endmethod

  method rcl_r_imm(regDst, imm)
    die('not implemented: rcl r,imm')
  endmethod

  method rcl_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: rcl m,cl')
  endmethod

  method rcl_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: rcl m,imm')
  endmethod

  method rcr_r_cl(regDst)
    die('not implemented: rcr r,cl')
  endmethod

  method rcr_r_imm(regDst, imm)
    die('not implemented: rcr r,imm')
  endmethod

  method rcr_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: rcr m,cl')
  endmethod

  method rcr_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: rcr m,imm')
  endmethod

  method rol_r_cl(regDst)
    die('not implemented: rol r,cl')
  endmethod

  method rol_r_imm(regDst, imm)
    die('not implemented: rol r,imm')
  endmethod

  method rol_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: rol m,cl')
  endmethod

  method rol_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: rol m,imm')
  endmethod

  method ror_r_cl(regDst)
    die('not implemented: ror r,cl')
  endmethod

  method ror_r_imm(regDst, imm)
    die('not implemented: ror r,imm')
  endmethod

  method ror_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: ror m,cl')
  endmethod

  method ror_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: ror m,imm')
  endmethod

  method sal_r_cl(regDst)
    die('not implemented: sal r,cl')
  endmethod

  method sal_r_imm(regDst, imm)
    die('not implemented: sal r,imm')
  endmethod

  method sal_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: sal m,cl')
  endmethod

  method sal_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: sal m,imm')
  endmethod

  method sar_r_cl(regDst)
    die('not implemented: sar r,cl')
  endmethod

  method sar_r_imm(regDst, imm)
    die('not implemented: sar r,imm')
  endmethod

  method sar_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: sar m,cl')
  endmethod

  method sar_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: sar m,imm')
  endmethod

  method shl_r_cl(regDst)
    die('not implemented: shl r,cl')
  endmethod

  method shl_r_imm(regDst, imm)
    die('not implemented: shl r,imm')
  endmethod

  method shl_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: shl m,cl')
  endmethod

  method shl_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: shl m,imm')
  endmethod

  method shr_r_cl(regDst)
    die('not implemented: shr r,cl')
  endmethod

  method shr_r_imm(regDst, imm)
    die('not implemented: shr r,imm')
  endmethod

  method shr_m_cl(regBase, scale, regIndex, disp)
    die('not implemented: shr m,cl')
  endmethod

  method shr_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: shr m,imm')
  endmethod

  method dec_r(regDst)
    die('not implemented: dec r')
  endmethod

  method dec_m(regBase, scale, regIndex, disp)
    die('not implemented: dec m')
  endmethod

  method inc_r(regDst)
    die('not implemented: inc r')
  endmethod

  method inc_m(regBase, scale, regIndex, disp)
    die('not implemented: inc m')
  endmethod

  method div_r(regDst)
    die('not implemented: div r')
  endmethod

  method div_m(regBase, scale, regIndex, disp)
    die('not implemented: div m')
  endmethod

  method idiv_r(regDst)
    die('not implemented: idiv r')
  endmethod

  method idiv_m(regBase, scale, regIndex, disp)
    die('not implemented: idiv m')
  endmethod

  method neg_r(regDst)
    die('not implemented: neg r')
  endmethod

  method neg_m(regBase, scale, regIndex, disp)
    die('not implemented: neg m')
  endmethod

  method not_r(regDst)
    die('not implemented: not r')
  endmethod

  method not_m(regBase, scale, regIndex, disp)
    die('not implemented: not m')
  endmethod

  method push_r(regDst)
    die('not implemented: push r')
  endmethod

  method push_m(regBase, scale, regIndex, disp)
    die('not implemented: push m')
  endmethod

  method push_imm(imm)
    die('not implemented: push imm')
  endmethod

  method pop_r(regDst)
    die('not implemented: pop r')
  endmethod

  method pop_m(regBase, scale, regIndex, disp)
    die('not implemented: pop m')
  endmethod

  method mov_r_r(regDst, regSrc)
    die('not implemented: mov r,r')
  endmethod

  method mov_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: mov r,m')
  endmethod

  method mov_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: mov m,r')
  endmethod

  method mov_r_imm(regDst, imm)
    die('not implemented: mov r,imm')
  endmethod

  method mov_m_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: mov m,imm')
  endmethod

  method xchg_r_r(regDst, regSrc)
    die('not implemented: xchg r,r')
  endmethod

  method xchg_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: xchg r,m')
  endmethod

  method xchg_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: xchg m,r')
  endmethod

  # mul        r | m | rd,rd | rd,md | rd,md,imm
  # imul       r | m | rd,rd | rd,md | rd,md,imm
  method in_r_imm(regDst, imm)
    die('not implemented: in r,imm')
  endmethod

  method in_r_dx(regDst)
    die('not implemented: in r,dx')
  endmethod

  method out_imm_r(imm, regSrc)
    die('not implemented: out imm,r')
  endmethod

  method out_dx_r(regSrc)
    die('not implemented: out dx,r')
  endmethod

  method lea_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lea r,m')
  endmethod

  method int_imm(imm)
    die('not implemented: int imm')
  endmethod

  method nop()
    die('not implemented: nop')
  endmethod

  method nop_r(regDst)
    die('not implemented: nop r')
  endmethod

  method nop_m(regBase, scale, regIndex, disp)
    die('not implemented: nop m')
  endmethod

  method ret()
    die('not implemented: ret')
  endmethod

  method ret_imm(imm)
    die('not implemented: ret imm')
  endmethod

  method retf()
    die('not implemented: retf')
  endmethod

  method retf_imm(imm)
    die('not implemented: retf imm')
  endmethod

  method cbw()
    die('not implemented: cbw')
  endmethod

  method cwd()
    die('not implemented: cwd')
  endmethod

  method clc()
    die('not implemented: clc')
  endmethod

  method cld()
    die('not implemented: cld')
  endmethod

  method cli()
    die('not implemented: cli')
  endmethod

  method cmc()
    die('not implemented: cmc')
  endmethod

  method cmpsb()
    die('not implemented: cmpsb')
  endmethod

  method cmpsw()
    die('not implemented: cmpsw')
  endmethod

  method hlt()
    die('not implemented: hlt')
  endmethod

  method iret()
    die('not implemented: iret')
  endmethod

  method lock()
    die('not implemented: lock')
  endmethod

  method lodsb()
    die('not implemented: lodsb')
  endmethod

  method lodsw()
    die('not implemented: lodsw')
  endmethod

  method movsb()
    die('not implemented: movsb')
  endmethod

  method movsw()
    die('not implemented: movsw')
  endmethod

  method popf()
    die('not implemented: popf')
  endmethod

  method pushf()
    die('not implemented: pushf')
  endmethod

  method rep()
    die('not implemented: rep')
  endmethod

  method repe()
    die('not implemented: repe')
  endmethod

  method repne()
    die('not implemented: repne')
  endmethod

  method scasb()
    die('not implemented: scasb')
  endmethod

  method scasw()
    die('not implemented: scasw')
  endmethod

  method stc()
    die('not implemented: stc')
  endmethod

  method std()
    die('not implemented: std')
  endmethod

  method sti()
    die('not implemented: sti')
  endmethod

  method stosb()
    die('not implemented: stosb')
  endmethod

  method stosw()
    die('not implemented: stosw')
  endmethod

  method wait()
    die('not implemented: wait')
  endmethod

  method xlatb()
    die('not implemented: xlatb')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80186 processor:
  #-----------------------------------------------------------------------------
  # bound invalid in 64-bit mode
  # popa  invalid in 64-bit mode
  # pusha invalid in 64-bit mode
  # push imm (already handled)
  # imul imm (already handled)
  # shl  imm (already handled)
  # shr  imm (already handled)
  # sal  imm (already handled)
  # sar  imm (already handled)
  # rol  imm (already handled)
  # ror  imm (already handled)
  # rcl  imm (already handled)
  # rcr  imm (already handled)
  # Only [edi/rdi] or [esi/rsi] addresses are available.
  # Tests are handled manually.
  # ins        m8,dx | m32,dx | m32,dx
  # outs       dx,m8 | dx,m16 | dx,m32
  method enter_imm_imm(imm1, imm2)
    die('not implemented: enter imm,imm')
  endmethod

  method leave()
    die('not implemented: leave')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80286 processor:
  #-----------------------------------------------------------------------------
  # arpl    invalid in 64-bit mode
  # loadall 80286 only
  method sldt_r(regDst)
    die('not implemented: sldt r')
  endmethod

  method sldt_m(regBase, scale, regIndex, disp)
    die('not implemented: sldt m')
  endmethod

  method lar_r_r(regDst, regSrc)
    die('not implemented: lar r,r')
  endmethod

  method lar_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lar r,m')
  endmethod

  method lsl_r_r(regDst, regSrc)
    die('not implemented: lsl r,r')
  endmethod

  method lsl_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lsl r,m')
  endmethod

  method smsw_r(regDst)
    die('not implemented: smsw r')
  endmethod

  method smsw_m(regBase, scale, regIndex, disp)
    die('not implemented: smsw m')
  endmethod

  method str_r(regDst)
    die('not implemented: str r')
  endmethod

  method str_m(regBase, scale, regIndex, disp)
    die('not implemented: str m')
  endmethod

  method lldt_r(regDst)
    die('not implemented: lldt r')
  endmethod

  method lldt_m(regBase, scale, regIndex, disp)
    die('not implemented: lldt m')
  endmethod

  method lmsw_r(regDst)
    die('not implemented: lmsw r')
  endmethod

  method lmsw_m(regBase, scale, regIndex, disp)
    die('not implemented: lmsw m')
  endmethod

  method ltr_r(regDst)
    die('not implemented: ltr r')
  endmethod

  method ltr_m(regBase, scale, regIndex, disp)
    die('not implemented: ltr m')
  endmethod

  method verr_r(regDst)
    die('not implemented: verr r')
  endmethod

  method verr_m(regBase, scale, regIndex, disp)
    die('not implemented: verr m')
  endmethod

  method verw_r(regDst)
    die('not implemented: verw r')
  endmethod

  method verw_m(regBase, scale, regIndex, disp)
    die('not implemented: verw m')
  endmethod

  method lgdt_m(regBase, scale, regIndex, disp)
    die('not implemented: lgdt m')
  endmethod

  method lidt_m(regBase, scale, regIndex, disp)
    die('not implemented: lidt m')
  endmethod

  method sgdt_m(regBase, scale, regIndex, disp)
    die('not implemented: sgdt m')
  endmethod

  method sidt_m(regBase, scale, regIndex, disp)
    die('not implemented: sidt m')
  endmethod

  method clts()
    die('not implemented: clts')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80386 processor:
  #-----------------------------------------------------------------------------

  # pushad   invalid in 64-bit mode
  # popad    invalid in 64-bit mode
  # pushfd   invalid in 64-bit mode
  # popfd    invalid in 64-bit mode
  # loadalld 80386 only
  # ibts     80386 before B1 step only
  # xbts     80386 before B1 step only
  # mov to/from CR/DR/TR (already handled)
  
  method bsf_r_r(regDst, regSrc)
    die('not implemented: bsf r,r')
  endmethod

  method bsf_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: bsf r,m')
  endmethod

  method bsr_r_r(regDst, regSrc)
    die('not implemented: bsr r,r')
  endmethod

  method bsr_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: bsr r,m')
  endmethod

  method bt_r_r(regDst, regSrc)
    die('not implemented: bt r,r')
  endmethod

  method bt_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: bt m,r')
  endmethod

  method btc_r_r(regDst, regSrc)
    die('not implemented: btc r,r')
  endmethod

  method btc_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: btc m,r')
  endmethod

  method btr_r_r(regDst, regSrc)
    die('not implemented: btr r,r')
  endmethod

  method btr_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: btr m,r')
  endmethod

  method bts_r_r(regDst, regSrc)
    die('not implemented: bts r,r')
  endmethod

  method bts_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: bts m,r')
  endmethod

  method lfs_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lfs r,m')
  endmethod

  method lgs_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lgs r,m')
  endmethod

  method lss_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: lss r,m')
  endmethod

  method movsx_r_r(regDst, regSrc)
    die('not implemented: movsx r,r')
  endmethod

  method movsx_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: movsx r,m')
  endmethod

  method movzx_r_r(regDst, regSrc)
    die('not implemented: movzx r,r')
  endmethod

  method movzx_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: movzx r,m')
  endmethod

  method shld_r_r_cl(regDst, regSrc)
    die('not implemented: shld r,r,cl')
  endmethod

  method shld_r_r_imm(regDst, regSrc, imm)
    die('not implemented: shld r,r,imm')
  endmethod

  method shld_r_r_cl(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: shld m,r,cl')
  endmethod

  method shld_m_r_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: shld m,r,imm')
  endmethod

  method shrd_r_r_cl(regDst, regSrc)
    die('not implemented: shrd r,r,cl')
  endmethod

  method shrd_r_r_imm(regDst, regSrc, imm)
    die('not implemented: shrd r,r,imm')
  endmethod

  method shrd_r_r_cl(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: shrd m,r,cl')
  endmethod

  method shrd_m_r_imm(regBase, scale, regIndex, disp, imm)
    die('not implemented: shrd m,r,imm')
  endmethod

  method seta_r(regDst)
    die('not implemented: seta r')
  endmethod

  method seta_m(regBase, scale, regIndex, disp)
    die('not implemented: seta m')
  endmethod

  method setae_r(regDst)
    die('not implemented: setae r')
  endmethod

  method setae_m(regBase, scale, regIndex, disp)
    die('not implemented: setae m')
  endmethod

  method setb_r(regDst)
    die('not implemented: setb r')
  endmethod

  method setb_m(regBase, scale, regIndex, disp)
    die('not implemented: setb m')
  endmethod

  method setbe_r(regDst)
    die('not implemented: setbe r')
  endmethod

  method setbe_m(regBase, scale, regIndex, disp)
    die('not implemented: setbe m')
  endmethod

  method setc_r(regDst)
    die('not implemented: setc r')
  endmethod

  method setc_m(regBase, scale, regIndex, disp)
    die('not implemented: setc m')
  endmethod

  method sete_r(regDst)
    die('not implemented: sete r')
  endmethod

  method sete_m(regBase, scale, regIndex, disp)
    die('not implemented: sete m')
  endmethod

  method setg_r(regDst)
    die('not implemented: setg r')
  endmethod

  method setg_m(regBase, scale, regIndex, disp)
    die('not implemented: setg m')
  endmethod

  method setge_r(regDst)
    die('not implemented: setge r')
  endmethod

  method setge_m(regBase, scale, regIndex, disp)
    die('not implemented: setge m')
  endmethod

  method setl_r(regDst)
    die('not implemented: setl r')
  endmethod

  method setl_m(regBase, scale, regIndex, disp)
    die('not implemented: setl m')
  endmethod

  method setle_r(regDst)
    die('not implemented: setle r')
  endmethod

  method setle_m(regBase, scale, regIndex, disp)
    die('not implemented: setle m')
  endmethod

  method setna_r(regDst)
    die('not implemented: setna r')
  endmethod

  method setna_m(regBase, scale, regIndex, disp)
    die('not implemented: setna m')
  endmethod

  method setnae_r(regDst)
    die('not implemented: setnae r')
  endmethod

  method setnae_m(regBase, scale, regIndex, disp)
    die('not implemented: setnae m')
  endmethod

  method setnb_r(regDst)
    die('not implemented: setnb r')
  endmethod

  method setnb_m(regBase, scale, regIndex, disp)
    die('not implemented: setnb m')
  endmethod

  method setnbe_r(regDst)
    die('not implemented: setnbe r')
  endmethod

  method setnbe_m(regBase, scale, regIndex, disp)
    die('not implemented: setnbe m')
  endmethod

  method setnc_r(regDst)
    die('not implemented: setnc r')
  endmethod

  method setnc_m(regBase, scale, regIndex, disp)
    die('not implemented: setnc m')
  endmethod

  method setne_r(regDst)
    die('not implemented: setne r')
  endmethod

  method setne_m(regBase, scale, regIndex, disp)
    die('not implemented: setne m')
  endmethod

  method setng_r(regDst)
    die('not implemented: setng r')
  endmethod

  method setng_m(regBase, scale, regIndex, disp)
    die('not implemented: setng m')
  endmethod

  method setnge_r(regDst)
    die('not implemented: setnge r')
  endmethod

  method setnge_m(regBase, scale, regIndex, disp)
    die('not implemented: setnge m')
  endmethod

  method setnl_r(regDst)
    die('not implemented: setnl r')
  endmethod

  method setnl_m(regBase, scale, regIndex, disp)
    die('not implemented: setnl m')
  endmethod

  method setnle_r(regDst)
    die('not implemented: setnle r')
  endmethod

  method setnle_m(regBase, scale, regIndex, disp)
    die('not implemented: setnle m')
  endmethod

  method setno_r(regDst)
    die('not implemented: setno r')
  endmethod

  method setno_m(regBase, scale, regIndex, disp)
    die('not implemented: setno m')
  endmethod

  method setnp_r(regDst)
    die('not implemented: setnp r')
  endmethod

  method setnp_m(regBase, scale, regIndex, disp)
    die('not implemented: setnp m')
  endmethod

  method setns_r(regDst)
    die('not implemented: setns r')
  endmethod

  method setns_m(regBase, scale, regIndex, disp)
    die('not implemented: setns m')
  endmethod

  method setnz_r(regDst)
    die('not implemented: setnz r')
  endmethod

  method setnz_m(regBase, scale, regIndex, disp)
    die('not implemented: setnz m')
  endmethod

  method seto_r(regDst)
    die('not implemented: seto r')
  endmethod

  method seto_m(regBase, scale, regIndex, disp)
    die('not implemented: seto m')
  endmethod

  method setp_r(regDst)
    die('not implemented: setp r')
  endmethod

  method setp_m(regBase, scale, regIndex, disp)
    die('not implemented: setp m')
  endmethod

  method setpe_r(regDst)
    die('not implemented: setpe r')
  endmethod

  method setpe_m(regBase, scale, regIndex, disp)
    die('not implemented: setpe m')
  endmethod

  method setpo_r(regDst)
    die('not implemented: setpo r')
  endmethod

  method setpo_m(regBase, scale, regIndex, disp)
    die('not implemented: setpo m')
  endmethod

  method sets_r(regDst)
    die('not implemented: sets r')
  endmethod

  method sets_m(regBase, scale, regIndex, disp)
    die('not implemented: sets m')
  endmethod

  method setz_r(regDst)
    die('not implemented: setz r')
  endmethod

  method setz_m(regBase, scale, regIndex, disp)
    die('not implemented: setz m')
  endmethod

  method cwde()
    die('not implemented: cwde')
  endmethod

  method cdq()
    die('not implemented: cdq')
  endmethod

  method iretd()
    die('not implemented: iretd')
  endmethod

  method lodsd()
    die('not implemented: lodsd')
  endmethod

  method stosd()
    die('not implemented: stosd')
  endmethod

  method cmpsd()
    die('not implemented: cmpsd')
  endmethod

  method movsd()
    die('not implemented: movsd')
  endmethod

  method scasd()
    die('not implemented: scasd')
  endmethod

  method insd()
    die('not implemented: insd')
  endmethod

  method outsd()
    die('not implemented: outsd')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80486 processor:
  #-----------------------------------------------------------------------------
  method bswap_r(regDst)
    die('not implemented: bswap r')
  endmethod

  method cmpxchg_r_r(regDst, regSrc)
    die('not implemented: cmpxchg r,r')
  endmethod

  method cmpxchg_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: cmpxchg m,r')
  endmethod

  method xadd_r_r(regDst, regSrc)
    die('not implemented: xadd r,r')
  endmethod

  method xadd_m_r(regBase, scale, regIndex, disp, regSrc)
    die('not implemented: xadd m,r')
  endmethod

  method invlpg_m(regBase, scale, regIndex, disp)
    die('not implemented: invlpg m')
  endmethod

  method invd()
    die('not implemented: invd')
  endmethod

  method wbinvd()
    die('not implemented: wbinvd')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Pentium processor:
  #-----------------------------------------------------------------------------
  method cmpxchg8b_m(regBase, scale, regIndex, disp)
    die('not implemented: cmpxchg8b m')
  endmethod

  method cpuid()
    die('not implemented: cpuid')
  endmethod

  method rdmsr()
    die('not implemented: rdmsr')
  endmethod

  method rdtsc()
    die('not implemented: rdtsc')
  endmethod

  method wrmsr()
    die('not implemented: wrmsr')
  endmethod

  method rsm()
    die('not implemented: rsm')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Penitum Pro processor:
  #-----------------------------------------------------------------------------
  method cmova_r_r(regDst, regSrc)
    die('not implemented: cmova r,r')
  endmethod

  method cmova_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmova r,m')
  endmethod

  method cmovae_r_r(regDst, regSrc)
    die('not implemented: cmovae r,r')
  endmethod

  method cmovae_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovae r,m')
  endmethod

  method cmovb_r_r(regDst, regSrc)
    die('not implemented: cmovb r,r')
  endmethod

  method cmovb_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovb r,m')
  endmethod

  method cmovbe_r_r(regDst, regSrc)
    die('not implemented: cmovbe r,r')
  endmethod

  method cmovbe_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovbe r,m')
  endmethod

  method cmovc_r_r(regDst, regSrc)
    die('not implemented: cmovc r,r')
  endmethod

  method cmovc_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovc r,m')
  endmethod

  method cmove_r_r(regDst, regSrc)
    die('not implemented: cmove r,r')
  endmethod

  method cmove_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmove r,m')
  endmethod

  method cmovg_r_r(regDst, regSrc)
    die('not implemented: cmovg r,r')
  endmethod

  method cmovg_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovg r,m')
  endmethod

  method cmovge_r_r(regDst, regSrc)
    die('not implemented: cmovge r,r')
  endmethod

  method cmovge_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovge r,m')
  endmethod

  method cmovl_r_r(regDst, regSrc)
    die('not implemented: cmovl r,r')
  endmethod

  method cmovl_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovl r,m')
  endmethod

  method cmovle_r_r(regDst, regSrc)
    die('not implemented: cmovle r,r')
  endmethod

  method cmovle_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovle r,m')
  endmethod

  method cmovna_r_r(regDst, regSrc)
    die('not implemented: cmovna r,r')
  endmethod

  method cmovna_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovna r,m')
  endmethod

  method cmovnae_r_r(regDst, regSrc)
    die('not implemented: cmovnae r,r')
  endmethod

  method cmovnae_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnae r,m')
  endmethod

  method cmovnb_r_r(regDst, regSrc)
    die('not implemented: cmovnb r,r')
  endmethod

  method cmovnb_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnb r,m')
  endmethod

  method cmovnbe_r_r(regDst, regSrc)
    die('not implemented: cmovnbe r,r')
  endmethod

  method cmovnbe_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnbe r,m')
  endmethod

  method cmovnc_r_r(regDst, regSrc)
    die('not implemented: cmovnc r,r')
  endmethod

  method cmovnc_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnc r,m')
  endmethod

  method cmovne_r_r(regDst, regSrc)
    die('not implemented: cmovne r,r')
  endmethod

  method cmovne_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovne r,m')
  endmethod

  method cmovng_r_r(regDst, regSrc)
    die('not implemented: cmovng r,r')
  endmethod

  method cmovng_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovng r,m')
  endmethod

  method cmovnge_r_r(regDst, regSrc)
    die('not implemented: cmovnge r,r')
  endmethod

  method cmovnge_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnge r,m')
  endmethod

  method cmovnl_r_r(regDst, regSrc)
    die('not implemented: cmovnl r,r')
  endmethod

  method cmovnl_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnl r,m')
  endmethod

  method cmovnle_r_r(regDst, regSrc)
    die('not implemented: cmovnle r,r')
  endmethod

  method cmovnle_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnle r,m')
  endmethod

  method cmovno_r_r(regDst, regSrc)
    die('not implemented: cmovno r,r')
  endmethod

  method cmovno_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovno r,m')
  endmethod

  method cmovnp_r_r(regDst, regSrc)
    die('not implemented: cmovnp r,r')
  endmethod

  method cmovnp_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnp r,m')
  endmethod

  method cmovns_r_r(regDst, regSrc)
    die('not implemented: cmovns r,r')
  endmethod

  method cmovns_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovns r,m')
  endmethod

  method cmovnz_r_r(regDst, regSrc)
    die('not implemented: cmovnz r,r')
  endmethod

  method cmovnz_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovnz r,m')
  endmethod

  method cmovo_r_r(regDst, regSrc)
    die('not implemented: cmovo r,r')
  endmethod

  method cmovo_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovo r,m')
  endmethod

  method cmovp_r_r(regDst, regSrc)
    die('not implemented: cmovp r,r')
  endmethod

  method cmovp_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovp r,m')
  endmethod

  method cmovpe_r_r(regDst, regSrc)
    die('not implemented: cmovpe r,r')
  endmethod

  method cmovpe_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovpe r,m')
  endmethod

  method cmovpo_r_r(regDst, regSrc)
    die('not implemented: cmovpo r,r')
  endmethod

  method cmovpo_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovpo r,m')
  endmethod

  method cmovs_r_r(regDst, regSrc)
    die('not implemented: cmovs r,r')
  endmethod

  method cmovs_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovs r,m')
  endmethod

  method cmovz_r_r(regDst, regSrc)
    die('not implemented: cmovz r,r')
  endmethod

  method cmovz_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cmovz r,m')
  endmethod

  method ud2()
    die('not implemented: ud2')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Penium MMX processor:
  #-----------------------------------------------------------------------------
  method rdpmc()
    die('not implemented: rdpmc')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with AMD K6 processor:
  #-----------------------------------------------------------------------------
  method syscall()
    die('not implemented: syscall')
  endmethod

  method sysret()
    die('not implemented: sysret')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Penitum II:
  #-----------------------------------------------------------------------------
  method sysenter()
    die('not implemented: sysenter')
  endmethod

  method sysexit()
    die('not implemented: sysexit')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Amd64:
  #-----------------------------------------------------------------------------
  method movsxd_r_r(regDst, regSrc)
    die('not implemented: movsxd r,r')
  endmethod

  method movsxd_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: movsxd r,m')
  endmethod

  method cmpxchg16b_m(regBase, scale, regIndex, disp)
    die('not implemented: cmpxchg16b m')
  endmethod

  method cdqe()
    die('not implemented: cdqe')
  endmethod

  method cqo()
    die('not implemented: cqo')
  endmethod

  method cmpsq()
    die('not implemented: cmpsq')
  endmethod

  method iretq()
    die('not implemented: iretq')
  endmethod

  method lodsq()
    die('not implemented: lodsq')
  endmethod

  method popfq()
    die('not implemented: popfq')
  endmethod

  method pushfq()
    die('not implemented: pushfq')
  endmethod

  method rdtscp()
    die('not implemented: rdtscp')
  endmethod

  method scasq()
    die('not implemented: scasq')
  endmethod

  method stosq()
    die('not implemented: stosq')
  endmethod

  method swapgs()
    die('not implemented: swapgs')
  endmethod


  #------------------------------------------------------------------
  #   core-jumps:
  #------------------------------------------------------------------

  # ###############################################################################
  # #                                                                             #
  # # This file is part of Mold project.                                          #
  # # Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
  # #                                                                             #
  # # This program is free software: you can redistribute it and/or modify        #
  # # it under the terms of the GNU General Public License as published by        #
  # # the Free Software Foundation, either version 3 of the License, or           #
  # # (at your option) any later version.                                         #
  # #                                                                             #
  # # This program is distributed in the hope that it will be useful,             #
  # # but WITHOUT ANY WARRANTY; without even the implied warranty of              #
  # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
  # # GNU General Public License for more details.                                #
  # #                                                                             #
  # # You should have received a copy of the GNU General Public License           #
  # # along with this program. If not, see <http://www.gnu.org/licenses/>         #
  # #                                                                             #
  # ###############################################################################
  #-----------------------------------------------------------------------------
  # Original mnemonics from 8086 processor:
  #-----------------------------------------------------------------------------
  # jcxz invalid in 64-bit mode
  # loopw   unavailable in 64-bit mode
  # loopew  unavailable in 64-bit mode
  # loopnew unavailable in 64-bit mode
  method call_rel(rel)
    die('not implemented: call rel')
  endmethod

  method call_r(regDst)
    die('not implemented: call r')
  endmethod

  method call_m(regBase, scale, regIndex, disp)
    die('not implemented: call m')
  endmethod

  method jmp_rel(rel)
    die('not implemented: jmp rel')
  endmethod

  method jmp_r(regDst)
    die('not implemented: jmp r')
  endmethod

  method jmp_m(regBase, scale, regIndex, disp)
    die('not implemented: jmp m')
  endmethod

  method jo_rel(rel)
    die('not implemented: jo rel')
  endmethod

  method jno_rel(rel)
    die('not implemented: jno rel')
  endmethod

  method jb_rel(rel)
    die('not implemented: jb rel')
  endmethod

  method jae_rel(rel)
    die('not implemented: jae rel')
  endmethod

  method jz_rel(rel)
    die('not implemented: jz rel')
  endmethod

  method jnz_rel(rel)
    die('not implemented: jnz rel')
  endmethod

  method jbe_rel(rel)
    die('not implemented: jbe rel')
  endmethod

  method ja_rel(rel)
    die('not implemented: ja rel')
  endmethod

  method js_rel(rel)
    die('not implemented: js rel')
  endmethod

  method jns_rel(rel)
    die('not implemented: jns rel')
  endmethod

  method jp_rel(rel)
    die('not implemented: jp rel')
  endmethod

  method jnp_rel(rel)
    die('not implemented: jnp rel')
  endmethod

  method jl_rel(rel)
    die('not implemented: jl rel')
  endmethod

  method jge_rel(rel)
    die('not implemented: jge rel')
  endmethod

  method jle_rel(rel)
    die('not implemented: jle rel')
  endmethod

  method jg_rel(rel)
    die('not implemented: jg rel')
  endmethod

  method loop_rel(rel)
    die('not implemented: loop rel')
  endmethod

  method loope_rel(rel)
    die('not implemented: loope rel')
  endmethod

  method loopne_rel(rel)
    die('not implemented: loopne rel')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80386 processor:
  #-----------------------------------------------------------------------------
  method jecxz_rel(rel)
    die('not implemented: jecxz rel')
  endmethod

  method looped_rel(rel)
    die('not implemented: looped rel')
  endmethod

  method loopned_rel(rel)
    die('not implemented: loopned rel')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Amd64:
  #-----------------------------------------------------------------------------
  method jrcxz_rel(rel)
    die('not implemented: jrcxz rel')
  endmethod


  #------------------------------------------------------------------
  #   mmx:
  #------------------------------------------------------------------

  # ###############################################################################
  # #                                                                             #
  # # This file is part of Mold project.                                          #
  # # Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
  # #                                                                             #
  # # This program is free software: you can redistribute it and/or modify        #
  # # it under the terms of the GNU General Public License as published by        #
  # # the Free Software Foundation, either version 3 of the License, or           #
  # # (at your option) any later version.                                         #
  # #                                                                             #
  # # This program is distributed in the hope that it will be useful,             #
  # # but WITHOUT ANY WARRANTY; without even the implied warranty of              #
  # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
  # # GNU General Public License for more details.                                #
  # #                                                                             #
  # # You should have received a copy of the GNU General Public License           #
  # # along with this program. If not, see <http://www.gnu.org/licenses/>         #
  # #                                                                             #
  # ###############################################################################
  #-----------------------------------------------------------------------------
  # Original instruction set instroduced with Pentum MMX:
  #-----------------------------------------------------------------------------
  method movd_mm_r(mmDst, regSrc)
    die('not implemented: movd mm,r')
  endmethod

  method movd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: movd mm,m')
  endmethod

  method movd_r_mm(regDst, mmSrc)
    die('not implemented: movd r,mm')
  endmethod

  method movd_m_mm(regBase, scale, regIndex, disp, mmSrc)
    die('not implemented: movd m,mm')
  endmethod

  method movq_mm_mm(mmDst, mmSrc)
    die('not implemented: movq mm,mm')
  endmethod

  method movq_mm_r(mmDst, regSrc)
    die('not implemented: movq mm,r')
  endmethod

  method movq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: movq mm,m')
  endmethod

  method movq_r_mm(regDst, mmSrc)
    die('not implemented: movq r,mm')
  endmethod

  method movq_m_mm(regBase, scale, regIndex, disp, mmSrc)
    die('not implemented: movq m,mm')
  endmethod

  method packssdw_mm_mm(mmDst, mmSrc)
    die('not implemented: packssdw mm,mm')
  endmethod

  method packssdw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: packssdw mm,m')
  endmethod

  method packsswb_mm_mm(mmDst, mmSrc)
    die('not implemented: packsswb mm,mm')
  endmethod

  method packsswb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: packsswb mm,m')
  endmethod

  method packuswb_mm_mm(mmDst, mmSrc)
    die('not implemented: packuswb mm,mm')
  endmethod

  method packuswb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: packuswb mm,m')
  endmethod

  method paddb_mm_mm(mmDst, mmSrc)
    die('not implemented: paddb mm,mm')
  endmethod

  method paddb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddb mm,m')
  endmethod

  method paddw_mm_mm(mmDst, mmSrc)
    die('not implemented: paddw mm,mm')
  endmethod

  method paddw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddw mm,m')
  endmethod

  method paddd_mm_mm(mmDst, mmSrc)
    die('not implemented: paddd mm,mm')
  endmethod

  method paddd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddd mm,m')
  endmethod

  method paddq_mm_mm(mmDst, mmSrc)
    die('not implemented: paddq mm,mm')
  endmethod

  method paddq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddq mm,m')
  endmethod

  method paddsb_mm_mm(mmDst, mmSrc)
    die('not implemented: paddsb mm,mm')
  endmethod

  method paddsb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddsb mm,m')
  endmethod

  method paddsw_mm_mm(mmDst, mmSrc)
    die('not implemented: paddsw mm,mm')
  endmethod

  method paddsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddsw mm,m')
  endmethod

  method paddusb_mm_mm(mmDst, mmSrc)
    die('not implemented: paddusb mm,mm')
  endmethod

  method paddusb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddusb mm,m')
  endmethod

  method paddusw_mm_mm(mmDst, mmSrc)
    die('not implemented: paddusw mm,mm')
  endmethod

  method paddusw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: paddusw mm,m')
  endmethod

  method pmaddwd_mm_mm(mmDst, mmSrc)
    die('not implemented: pmaddwd mm,mm')
  endmethod

  method pmaddwd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmaddwd mm,m')
  endmethod

  method pand_mm_mm(mmDst, mmSrc)
    die('not implemented: pand mm,mm')
  endmethod

  method pand_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pand mm,m')
  endmethod

  method pandn_mm_mm(mmDst, mmSrc)
    die('not implemented: pandn mm,mm')
  endmethod

  method pandn_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pandn mm,m')
  endmethod

  method por_mm_mm(mmDst, mmSrc)
    die('not implemented: por mm,mm')
  endmethod

  method por_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: por mm,m')
  endmethod

  method pxor_mm_mm(mmDst, mmSrc)
    die('not implemented: pxor mm,mm')
  endmethod

  method pxor_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pxor mm,m')
  endmethod

  method pcmpeqb_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpeqb mm,mm')
  endmethod

  method pcmpeqb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpeqb mm,m')
  endmethod

  method pcmpeqw_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpeqw mm,mm')
  endmethod

  method pcmpeqw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpeqw mm,m')
  endmethod

  method pcmpeqd_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpeqd mm,mm')
  endmethod

  method pcmpeqd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpeqd mm,m')
  endmethod

  method pcmpgtb_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpgtb mm,mm')
  endmethod

  method pcmpgtb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpgtb mm,m')
  endmethod

  method pcmpgtw_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpgtw mm,mm')
  endmethod

  method pcmpgtw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpgtw mm,m')
  endmethod

  method pcmpgtd_mm_mm(mmDst, mmSrc)
    die('not implemented: pcmpgtd mm,mm')
  endmethod

  method pcmpgtd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pcmpgtd mm,m')
  endmethod

  method pmulhw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmulhw mm,mm')
  endmethod

  method pmulhw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmulhw mm,m')
  endmethod

  method pmullw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmullw mm,mm')
  endmethod

  method pmullw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmullw mm,m')
  endmethod

  method psubb_mm_mm(mmDst, mmSrc)
    die('not implemented: psubb mm,mm')
  endmethod

  method psubb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubb mm,m')
  endmethod

  method psubw_mm_mm(mmDst, mmSrc)
    die('not implemented: psubw mm,mm')
  endmethod

  method psubw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubw mm,m')
  endmethod

  method psubd_mm_mm(mmDst, mmSrc)
    die('not implemented: psubd mm,mm')
  endmethod

  method psubd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubd mm,m')
  endmethod

  method psubsb_mm_mm(mmDst, mmSrc)
    die('not implemented: psubsb mm,mm')
  endmethod

  method psubsb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubsb mm,m')
  endmethod

  method psubsw_mm_mm(mmDst, mmSrc)
    die('not implemented: psubsw mm,mm')
  endmethod

  method psubsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubsw mm,m')
  endmethod

  method psubusb_mm_mm(mmDst, mmSrc)
    die('not implemented: psubusb mm,mm')
  endmethod

  method psubusb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubusb mm,m')
  endmethod

  method psubusw_mm_mm(mmDst, mmSrc)
    die('not implemented: psubusw mm,mm')
  endmethod

  method psubusw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubusw mm,m')
  endmethod

  method punpckhbw_mm_mm(mmDst, mmSrc)
    die('not implemented: punpckhbw mm,mm')
  endmethod

  method punpckhbw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: punpckhbw mm,m')
  endmethod

  method punpckhwd_mm_mm(mmDst, mmSrc)
    die('not implemented: punpckhwd mm,mm')
  endmethod

  method punpckhwd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: punpckhwd mm,m')
  endmethod

  method punpckhdq_mm_mm(mmDst, mmSrc)
    die('not implemented: punpckhdq mm,mm')
  endmethod

  method punpckhdq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: punpckhdq mm,m')
  endmethod

  # TODO: Fasm gives invalid operands for mm,m32
  # punpcklbw mm,mm | mm,m32
  # punpcklwd mm,mm | mm,m32
  # punpckldq mm,mm | mm,m32
  method punpcklbw_mm_mm(mmDst, mmSrc)
    die('not implemented: punpcklbw mm,mm')
  endmethod

  method punpcklwd_mm_mm(mmDst, mmSrc)
    die('not implemented: punpcklwd mm,mm')
  endmethod

  method punpckldq_mm_mm(mmDst, mmSrc)
    die('not implemented: punpckldq mm,mm')
  endmethod

  method psllw_mm_mm(mmDst, mmSrc)
    die('not implemented: psllw mm,mm')
  endmethod

  method psllw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psllw mm,m')
  endmethod

  method psllw_mm_imm(mmDst, imm)
    die('not implemented: psllw mm,imm')
  endmethod

  method pslld_mm_mm(mmDst, mmSrc)
    die('not implemented: pslld mm,mm')
  endmethod

  method pslld_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pslld mm,m')
  endmethod

  method pslld_mm_imm(mmDst, imm)
    die('not implemented: pslld mm,imm')
  endmethod

  method psllq_mm_mm(mmDst, mmSrc)
    die('not implemented: psllq mm,mm')
  endmethod

  method psllq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psllq mm,m')
  endmethod

  method psllq_mm_imm(mmDst, imm)
    die('not implemented: psllq mm,imm')
  endmethod

  method psrad_mm_mm(mmDst, mmSrc)
    die('not implemented: psrad mm,mm')
  endmethod

  method psrad_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psrad mm,m')
  endmethod

  method psrad_mm_imm(mmDst, imm)
    die('not implemented: psrad mm,imm')
  endmethod

  method psraw_mm_mm(mmDst, mmSrc)
    die('not implemented: psraw mm,mm')
  endmethod

  method psraw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psraw mm,m')
  endmethod

  method psraw_mm_imm(mmDst, imm)
    die('not implemented: psraw mm,imm')
  endmethod

  method psrlw_mm_mm(mmDst, mmSrc)
    die('not implemented: psrlw mm,mm')
  endmethod

  method psrlw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psrlw mm,m')
  endmethod

  method psrlw_mm_imm(mmDst, imm)
    die('not implemented: psrlw mm,imm')
  endmethod

  method psrld_mm_mm(mmDst, mmSrc)
    die('not implemented: psrld mm,mm')
  endmethod

  method psrld_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psrld mm,m')
  endmethod

  method psrld_mm_imm(mmDst, imm)
    die('not implemented: psrld mm,imm')
  endmethod

  method psrlq_mm_mm(mmDst, mmSrc)
    die('not implemented: psrlq mm,mm')
  endmethod

  method psrlq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psrlq mm,m')
  endmethod

  method psrlq_mm_imm(mmDst, imm)
    die('not implemented: psrlq mm,imm')
  endmethod

  method emms()
    die('not implemented: emms')
  endmethod

  #-----------------------------------------------------------------------------
  # Instructions added with SSE:
  #-----------------------------------------------------------------------------
  method pshufw_mm_mm_imm(mmDst, mmSrc, imm)
    die('not implemented: pshufw mm,mm,imm')
  endmethod

  method pshufw_mm_m_imm(mmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: pshufw mm,m,imm')
  endmethod

  method pinsrw_mm_m_imm(mmDst, regSrc, imm)
    die('not implemented: pinsrw mm,r,imm')
  endmethod

  method pinsrw_mm_m_imm(mmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: pinsrw mm,m,imm')
  endmethod

  method pextrw_r_mm_imm(regDst, mmSrc, imm)
    die('not implemented: pextrw r,mm,imm')
  endmethod

  method pmovmskb_r_mm(regDst, mmSrc)
    die('not implemented: pmovmskb r,mm')
  endmethod

  method pminub_mm_mm(mmDst, mmSrc)
    die('not implemented: pminub mm,mm')
  endmethod

  method pminub_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pminub mm,m')
  endmethod

  method pmaxub_mm_mm(mmDst, mmSrc)
    die('not implemented: pmaxub mm,mm')
  endmethod

  method pmaxub_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmaxub mm,m')
  endmethod

  method pavgb_mm_mm(mmDst, mmSrc)
    die('not implemented: pavgb mm,mm')
  endmethod

  method pavgb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pavgb mm,m')
  endmethod

  method pavgw_mm_mm(mmDst, mmSrc)
    die('not implemented: pavgw mm,mm')
  endmethod

  method pavgw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pavgw mm,m')
  endmethod

  method pmulhuw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmulhuw mm,mm')
  endmethod

  method pmulhuw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmulhuw mm,m')
  endmethod

  method pminsw_mm_mm(mmDst, mmSrc)
    die('not implemented: pminsw mm,mm')
  endmethod

  method pminsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pminsw mm,m')
  endmethod

  method pmaxsw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmaxsw mm,mm')
  endmethod

  method pmaxsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmaxsw mm,m')
  endmethod

  method psadbw_mm_mm(mmDst, mmSrc)
    die('not implemented: psadbw mm,mm')
  endmethod

  method psadbw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psadbw mm,m')
  endmethod

  #-----------------------------------------------------------------------------
  # Instructions added with SSE2:
  #-----------------------------------------------------------------------------
  method psubq_mm_mm(mmDst, mmSrc)
    die('not implemented: psubq mm,mm')
  endmethod

  method psubq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psubq mm,m')
  endmethod

  method pmuludq_mm_mm(mmDst, mmSrc)
    die('not implemented: pmuludq mm,mm')
  endmethod

  method pmuludq_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmuludq mm,m')
  endmethod

  #-----------------------------------------------------------------------------
  # Instructions added with SSE3:
  #-----------------------------------------------------------------------------
  method psignb_mm_mm(mmDst, mmSrc)
    die('not implemented: psignb mm,mm')
  endmethod

  method psignb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psignb mm,m')
  endmethod

  method psignw_mm_mm(mmDst, mmSrc)
    die('not implemented: psignw mm,mm')
  endmethod

  method psignw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psignw mm,m')
  endmethod

  method psignd_mm_mm(mmDst, mmSrc)
    die('not implemented: psignd mm,mm')
  endmethod

  method psignd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: psignd mm,m')
  endmethod

  method pshufb_mm_mm(mmDst, mmSrc)
    die('not implemented: pshufb mm,mm')
  endmethod

  method pshufb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pshufb mm,m')
  endmethod

  method pmulhrsw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmulhrsw mm,mm')
  endmethod

  method pmulhrsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmulhrsw mm,m')
  endmethod

  method pmaddubsw_mm_mm(mmDst, mmSrc)
    die('not implemented: pmaddubsw mm,mm')
  endmethod

  method pmaddubsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pmaddubsw mm,m')
  endmethod

  method phsubw_mm_mm(mmDst, mmSrc)
    die('not implemented: phsubw mm,mm')
  endmethod

  method phsubw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phsubw mm,m')
  endmethod

  method phsubsw_mm_mm(mmDst, mmSrc)
    die('not implemented: phsubsw mm,mm')
  endmethod

  method phsubsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phsubsw mm,m')
  endmethod

  method phsubd_mm_mm(mmDst, mmSrc)
    die('not implemented: phsubd mm,mm')
  endmethod

  method phsubd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phsubd mm,m')
  endmethod

  method phaddsw_mm_mm(mmDst, mmSrc)
    die('not implemented: phaddsw mm,mm')
  endmethod

  method phaddsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phaddsw mm,m')
  endmethod

  method phaddw_mm_mm(mmDst, mmSrc)
    die('not implemented: phaddw mm,mm')
  endmethod

  method phaddw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phaddw mm,m')
  endmethod

  method phaddd_mm_mm(mmDst, mmSrc)
    die('not implemented: phaddd mm,mm')
  endmethod

  method phaddd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: phaddd mm,m')
  endmethod

  method pabsb_mm_mm(mmDst, mmSrc)
    die('not implemented: pabsb mm,mm')
  endmethod

  method pabsb_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pabsb mm,m')
  endmethod

  method pabsw_mm_mm(mmDst, mmSrc)
    die('not implemented: pabsw mm,mm')
  endmethod

  method pabsw_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pabsw mm,m')
  endmethod

  method pabsd_mm_mm(mmDst, mmSrc)
    die('not implemented: pabsd mm,mm')
  endmethod

  method pabsd_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: pabsd mm,m')
  endmethod

  method palignr_mm_mm_imm(mmDst, mmSrc, imm)
    die('not implemented: palignr mm,mm,imm')
  endmethod

  method palignr_mm_m_imm(mmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: palignr mm,m,imm')
  endmethod


  #------------------------------------------------------------------
  #   sse:
  #------------------------------------------------------------------

  # ###############################################################################
  # #                                                                             #
  # # This file is part of Mold project.                                          #
  # # Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
  # #                                                                             #
  # # This program is free software: you can redistribute it and/or modify        #
  # # it under the terms of the GNU General Public License as published by        #
  # # the Free Software Foundation, either version 3 of the License, or           #
  # # (at your option) any later version.                                         #
  # #                                                                             #
  # # This program is distributed in the hope that it will be useful,             #
  # # but WITHOUT ANY WARRANTY; without even the implied warranty of              #
  # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
  # # GNU General Public License for more details.                                #
  # #                                                                             #
  # # You should have received a copy of the GNU General Public License           #
  # # along with this program. If not, see <http://www.gnu.org/licenses/>         #
  # #                                                                             #
  # ###############################################################################
  #-----------------------------------------------------------------------------
  # Instructions added with Pentium III:
  #-----------------------------------------------------------------------------
  method andps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: andps xmm,xmm')
  endmethod

  method andps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: andps xmm,m')
  endmethod

  method andnps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: andnps xmm,xmm')
  endmethod

  method andnps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: andnps xmm,m')
  endmethod

  method orps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: orps xmm,xmm')
  endmethod

  method orps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: orps xmm,m')
  endmethod

  method xorps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: xorps xmm,xmm')
  endmethod

  method xorps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: xorps xmm,m')
  endmethod

  method unpcklps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: unpcklps xmm,xmm')
  endmethod

  method unpcklps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: unpcklps xmm,m')
  endmethod

  method unpckhps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: unpckhps xmm,xmm')
  endmethod

  method unpckhps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: unpckhps xmm,m')
  endmethod

  method movups_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: movups xmm,xmm')
  endmethod

  method movups_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: movups xmm,m')
  endmethod

  method movups_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movups m,xmm')
  endmethod

  method movaps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: movaps xmm,xmm')
  endmethod

  method movaps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: movaps xmm,m')
  endmethod

  method movaps_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movaps m,xmm')
  endmethod

  method movss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: movss xmm,xmm')
  endmethod

  method movss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: movss xmm,m')
  endmethod

  method movss_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movss m,xmm')
  endmethod

  method movlps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: movlps xmm,m')
  endmethod

  method movlps_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movlps m,xmm')
  endmethod

  method movhps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: movhps xmm,m')
  endmethod

  method movhps_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movhps m,xmm')
  endmethod

  method cvttss2si_r_xmm(regDst, xmmSrc)
    die('not implemented: cvttss2si r,xmm')
  endmethod

  method cvttss2si_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cvttss2si r,m')
  endmethod

  method cvtss2si_r_xmm(regDst, xmmSrc)
    die('not implemented: cvtss2si r,xmm')
  endmethod

  method cvtss2si_r_m(regDst, regBase, scale, regIndex, disp)
    die('not implemented: cvtss2si r,m')
  endmethod

  method cvtsi2ss_xmm_r(xmmDst, regSrc)
    die('not implemented: cvtsi2ss xmm,r')
  endmethod

  method cvtsi2ss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: cvtsi2ss xmm,m')
  endmethod

  method cvttps2pi_mm_xmm(mmDst, xmmSrc)
    die('not implemented: cvttps2pi mm,xmm')
  endmethod

  method cvttps2pi_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: cvttps2pi mm,m')
  endmethod

  method cvtps2pi_mm_xmm(mmDst, xmmSrc)
    die('not implemented: cvtps2pi mm,xmm')
  endmethod

  method cvtps2pi_mm_r(mmDst, regBase, scale, regIndex, disp)
    die('not implemented: cvtps2pi mm,m')
  endmethod

  method cvtpi2ps_xmm_mm(xmmDst, mmSrc)
    die('not implemented: cvtpi2ps xmm,mm')
  endmethod

  method cvtpi2ps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: cvtpi2ps xmm,m')
  endmethod

  method movmskps_r_xmm(regDst, xmmSrc)
    die('not implemented: movmskps r,xmm')
  endmethod

  method movhlps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: movhlps xmm,xmm')
  endmethod

  method movlhps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: movlhps xmm,xmm')
  endmethod

  method movntps_m_xmm(regBase, scale, regIndex, disp, xmmSrc)
    die('not implemented: movntps m,xmm')
  endmethod

  method ucomiss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: ucomiss xmm,xmm')
  endmethod

  method ucomiss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: ucomiss xmm,m')
  endmethod

  method comiss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: comiss xmm,xmm')
  endmethod

  method comiss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: comiss xmm,m')
  endmethod

  method sqrtss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: sqrtss xmm,xmm')
  endmethod

  method sqrtss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: sqrtss xmm,m')
  endmethod

  method rsqrtss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: rsqrtss xmm,xmm')
  endmethod

  method rsqrtss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: rsqrtss xmm,m')
  endmethod

  method rcpss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: rcpss xmm,xmm')
  endmethod

  method rcpss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: rcpss xmm,m')
  endmethod

  method addss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: addss xmm,xmm')
  endmethod

  method addss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: addss xmm,m')
  endmethod

  method mulss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: mulss xmm,xmm')
  endmethod

  method mulss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: mulss xmm,m')
  endmethod

  method subss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: subss xmm,xmm')
  endmethod

  method subss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: subss xmm,m')
  endmethod

  method minss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: minss xmm,xmm')
  endmethod

  method minss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: minss xmm,m')
  endmethod

  method divss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: divss xmm,xmm')
  endmethod

  method divss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: divss xmm,m')
  endmethod

  method maxss_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: maxss xmm,xmm')
  endmethod

  method maxss_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: maxss xmm,m')
  endmethod

  method sqrtps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: sqrtps xmm,xmm')
  endmethod

  method sqrtps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: sqrtps xmm,m')
  endmethod

  method rsqrtps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: rsqrtps xmm,xmm')
  endmethod

  method rsqrtps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: rsqrtps xmm,m')
  endmethod

  method rcpps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: rcpps xmm,xmm')
  endmethod

  method rcpps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: rcpps xmm,m')
  endmethod

  method addps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: addps xmm,xmm')
  endmethod

  method addps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: addps xmm,m')
  endmethod

  method mulps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: mulps xmm,xmm')
  endmethod

  method mulps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: mulps xmm,m')
  endmethod

  method subps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: subps xmm,xmm')
  endmethod

  method subps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: subps xmm,m')
  endmethod

  method minps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: minps xmm,xmm')
  endmethod

  method minps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: minps xmm,m')
  endmethod

  method divps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: divps xmm,xmm')
  endmethod

  method divps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: divps xmm,m')
  endmethod

  method maxps_xmm_xmm(xmmDst, xmmSrc)
    die('not implemented: maxps xmm,xmm')
  endmethod

  method maxps_xmm_m(xmmDst, regBase, scale, regIndex, disp)
    die('not implemented: maxps xmm,m')
  endmethod

  method cmpps_xmm_xmm_imm(xmmDst, xmmSrc, imm)
    die('not implemented: cmpps xmm,xmm,imm')
  endmethod

  method cmpps_xmm_m_imm(xmmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: cmpps xmm,m,imm')
  endmethod

  method shufps_xmm_xmm_imm(xmmDst, xmmSrc, imm)
    die('not implemented: shufps xmm,xmm,imm')
  endmethod

  method shufps_xmm_m_imm(xmmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: shufps xmm,m,imm')
  endmethod

  method cmpss_xmm_xmm_imm(xmmDst, xmmSrc, imm)
    die('not implemented: cmpss xmm,xmm,imm')
  endmethod

  method cmpss_xmm_m_imm(xmmDst, regBase, scale, regIndex, disp, imm)
    die('not implemented: cmpss xmm,m,imm')
  endmethod

  method ldmxcsr_m(regBase, scale, regIndex, disp)
    die('not implemented: ldmxcsr m')
  endmethod

  method stmxcsr_m(regBase, scale, regIndex, disp)
    die('not implemented: stmxcsr m')
  endmethod


  #------------------------------------------------------------------
  #   sse2:
  #------------------------------------------------------------------

  # ###############################################################################
  # #                                                                             #
  # # This file is part of Mold project.                                          #
  # # Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
  # #                                                                             #
  # # This program is free software: you can redistribute it and/or modify        #
  # # it under the terms of the GNU General Public License as published by        #
  # # the Free Software Foundation, either version 3 of the License, or           #
  # # (at your option) any later version.                                         #
  # #                                                                             #
  # # This program is distributed in the hope that it will be useful,             #
  # # but WITHOUT ANY WARRANTY; without even the implied warranty of              #
  # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
  # # GNU General Public License for more details.                                #
  # #                                                                             #
  # # You should have received a copy of the GNU General Public License           #
  # # along with this program. If not, see <http://www.gnu.org/licenses/>         #
  # #                                                                             #
  # ###############################################################################
  #-----------------------------------------------------------------------------
  # Instructions added with Pentium 4:
  #-----------------------------------------------------------------------------

  #------------------------------------------------------------------
  #   x87:
  #------------------------------------------------------------------

  # ###############################################################################
  # #                                                                             #
  # # This file is part of Mold project.                                          #
  # # Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
  # #                                                                             #
  # # This program is free software: you can redistribute it and/or modify        #
  # # it under the terms of the GNU General Public License as published by        #
  # # the Free Software Foundation, either version 3 of the License, or           #
  # # (at your option) any later version.                                         #
  # #                                                                             #
  # # This program is distributed in the hope that it will be useful,             #
  # # but WITHOUT ANY WARRANTY; without even the implied warranty of              #
  # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
  # # GNU General Public License for more details.                                #
  # #                                                                             #
  # # You should have received a copy of the GNU General Public License           #
  # # along with this program. If not, see <http://www.gnu.org/licenses/>         #
  # #                                                                             #
  # ###############################################################################
  #-----------------------------------------------------------------------------
  # Original mnemonics from 8087 coprocessor:
  #-----------------------------------------------------------------------------
  # fdisi  8087 only
  # feni   8087 only
  # fndisi 8087 only
  # fneni  8087 only
  method fadd_m(regBase, scale, regIndex, disp)
    die('not implemented: fadd m')
  endmethod

  method fadd_sti_sti(stDst, stSrc)
    die('not implemented: fadd st0,sti')
  endmethod

  method fadd_sti_sti(stDst, stSrc)
    die('not implemented: fadd sti,st0')
  endmethod

  method fdiv_m(regBase, scale, regIndex, disp)
    die('not implemented: fdiv m')
  endmethod

  method fdiv_sti_sti(stDst, stSrc)
    die('not implemented: fdiv st0,sti')
  endmethod

  method fdiv_sti_sti(stDst, stSrc)
    die('not implemented: fdiv sti,st0')
  endmethod

  method fdivr_m(regBase, scale, regIndex, disp)
    die('not implemented: fdivr m')
  endmethod

  method fdivr_sti_sti(stDst, stSrc)
    die('not implemented: fdivr st0,sti')
  endmethod

  method fdivr_sti_sti(stDst, stSrc)
    die('not implemented: fdivr sti,st0')
  endmethod

  method fmul_m(regBase, scale, regIndex, disp)
    die('not implemented: fmul m')
  endmethod

  method fmul_sti_sti(stDst, stSrc)
    die('not implemented: fmul st0,sti')
  endmethod

  method fmul_sti_sti(stDst, stSrc)
    die('not implemented: fmul sti,st0')
  endmethod

  method fsub_m(regBase, scale, regIndex, disp)
    die('not implemented: fsub m')
  endmethod

  method fsub_sti_sti(stDst, stSrc)
    die('not implemented: fsub st0,sti')
  endmethod

  method fsub_sti_sti(stDst, stSrc)
    die('not implemented: fsub sti,st0')
  endmethod

  method fsubr_m(regBase, scale, regIndex, disp)
    die('not implemented: fsubr m')
  endmethod

  method fsubr_sti_sti(stDst, stSrc)
    die('not implemented: fsubr st0,sti')
  endmethod

  method fsubr_sti_sti(stDst, stSrc)
    die('not implemented: fsubr sti,st0')
  endmethod

  method faddp()
    die('not implemented: faddp')
  endmethod

  method faddp_sti_sti(stDst, stSrc)
    die('not implemented: faddp sti,st0')
  endmethod

  method fdivp()
    die('not implemented: fdivp')
  endmethod

  method fdivp_sti_sti(stDst, stSrc)
    die('not implemented: fdivp sti,st0')
  endmethod

  method fdivrp()
    die('not implemented: fdivrp')
  endmethod

  method fdivrp_sti_sti(stDst, stSrc)
    die('not implemented: fdivrp sti,st0')
  endmethod

  method fmulp()
    die('not implemented: fmulp')
  endmethod

  method fmulp_sti_sti(stDst, stSrc)
    die('not implemented: fmulp sti,st0')
  endmethod

  method fsubp()
    die('not implemented: fsubp')
  endmethod

  method fsubp_sti_sti(stDst, stSrc)
    die('not implemented: fsubp sti,st0')
  endmethod

  method fsubrp()
    die('not implemented: fsubrp')
  endmethod

  method fsubrp_sti_sti(stDst, stSrc)
    die('not implemented: fsubrp sti,st0')
  endmethod

  method fcom()
    die('not implemented: fcom')
  endmethod

  method fcom_m(regBase, scale, regIndex, disp)
    die('not implemented: fcom m')
  endmethod

  method fcom_sti(stDst)
    die('not implemented: fcom sti')
  endmethod

  method fcomp()
    die('not implemented: fcomp')
  endmethod

  method fcomp_m(regBase, scale, regIndex, disp)
    die('not implemented: fcomp m')
  endmethod

  method fcomp_sti(stDst)
    die('not implemented: fcomp sti')
  endmethod

  method fxch()
    die('not implemented: fxch')
  endmethod

  method fxch_sti(stDst)
    die('not implemented: fxch sti')
  endmethod

  method fild_m(regBase, scale, regIndex, disp)
    die('not implemented: fild m')
  endmethod

  method fistp_m(regBase, scale, regIndex, disp)
    die('not implemented: fistp m')
  endmethod

  method fiadd_m(regBase, scale, regIndex, disp)
    die('not implemented: fiadd m')
  endmethod

  method fidiv_m(regBase, scale, regIndex, disp)
    die('not implemented: fidiv m')
  endmethod

  method fidivr_m(regBase, scale, regIndex, disp)
    die('not implemented: fidivr m')
  endmethod

  method fimul_m(regBase, scale, regIndex, disp)
    die('not implemented: fimul m')
  endmethod

  method fisub_m(regBase, scale, regIndex, disp)
    die('not implemented: fisub m')
  endmethod

  method fisubr_m(regBase, scale, regIndex, disp)
    die('not implemented: fisubr m')
  endmethod

  method fist_m(regBase, scale, regIndex, disp)
    die('not implemented: fist m')
  endmethod

  method ficom_m(regBase, scale, regIndex, disp)
    die('not implemented: ficom m')
  endmethod

  method ficomp_m(regBase, scale, regIndex, disp)
    die('not implemented: ficomp m')
  endmethod

  method ffree_sti(stDst)
    die('not implemented: ffree sti')
  endmethod

  method fld_m(regBase, scale, regIndex, disp)
    die('not implemented: fld m')
  endmethod

  method fld_sti(stDst)
    die('not implemented: fld sti')
  endmethod

  method fstp_m(regBase, scale, regIndex, disp)
    die('not implemented: fstp m')
  endmethod

  method fstp_sti(stDst)
    die('not implemented: fstp sti')
  endmethod

  method fst_m(regBase, scale, regIndex, disp)
    die('not implemented: fst m')
  endmethod

  method fst_sti(stDst)
    die('not implemented: fst sti')
  endmethod

  method fnstsw_r(regDst)
    die('not implemented: fnstsw r')
  endmethod

  method fnstsw_m(regBase, scale, regIndex, disp)
    die('not implemented: fnstsw m')
  endmethod

  method fstsw_r(regDst)
    die('not implemented: fstsw r')
  endmethod

  method fstsw_m(regBase, scale, regIndex, disp)
    die('not implemented: fstsw m')
  endmethod

  method frstor_m(regBase, scale, regIndex, disp)
    die('not implemented: frstor m')
  endmethod

  method fsave_m(regBase, scale, regIndex, disp)
    die('not implemented: fsave m')
  endmethod

  method fnsave_m(regBase, scale, regIndex, disp)
    die('not implemented: fnsave m')
  endmethod

  method fnstenv_m(regBase, scale, regIndex, disp)
    die('not implemented: fnstenv m')
  endmethod

  method fnstenvw_m(regBase, scale, regIndex, disp)
    die('not implemented: fnstenvw m')
  endmethod

  method fstenv_m(regBase, scale, regIndex, disp)
    die('not implemented: fstenv m')
  endmethod

  method fnstcw_m(regBase, scale, regIndex, disp)
    die('not implemented: fnstcw m')
  endmethod

  method fldcw_m(regBase, scale, regIndex, disp)
    die('not implemented: fldcw m')
  endmethod

  method fstcw_m(regBase, scale, regIndex, disp)
    die('not implemented: fstcw m')
  endmethod

  method fbld_m(regBase, scale, regIndex, disp)
    die('not implemented: fbld m')
  endmethod

  method fbstp_m(regBase, scale, regIndex, disp)
    die('not implemented: fbstp m')
  endmethod

  method fldenv_m(regBase, scale, regIndex, disp)
    die('not implemented: fldenv m')
  endmethod

  method fldenvw_m(regBase, scale, regIndex, disp)
    die('not implemented: fldenvw m')
  endmethod

  method fnsavew_m(regBase, scale, regIndex, disp)
    die('not implemented: fnsavew m')
  endmethod

  method frstorw_m(regBase, scale, regIndex, disp)
    die('not implemented: frstorw m')
  endmethod

  method fsavew_m(regBase, scale, regIndex, disp)
    die('not implemented: fsavew m')
  endmethod

  method fstenvw_m(regBase, scale, regIndex, disp)
    die('not implemented: fstenvw m')
  endmethod

  method f2xm1()
    die('not implemented: f2xm1')
  endmethod

  method fabs()
    die('not implemented: fabs')
  endmethod

  method fchs()
    die('not implemented: fchs')
  endmethod

  method fclex()
    die('not implemented: fclex')
  endmethod

  method fcompp()
    die('not implemented: fcompp')
  endmethod

  method fdecstp()
    die('not implemented: fdecstp')
  endmethod

  method fincstp()
    die('not implemented: fincstp')
  endmethod

  method finit()
    die('not implemented: finit')
  endmethod

  method fld1()
    die('not implemented: fld1')
  endmethod

  method fldl2e()
    die('not implemented: fldl2e')
  endmethod

  method fldl2t()
    die('not implemented: fldl2t')
  endmethod

  method fldlg2()
    die('not implemented: fldlg2')
  endmethod

  method fldln2()
    die('not implemented: fldln2')
  endmethod

  method fldpi()
    die('not implemented: fldpi')
  endmethod

  method fldz()
    die('not implemented: fldz')
  endmethod

  method fnclex()
    die('not implemented: fnclex')
  endmethod

  method fninit()
    die('not implemented: fninit')
  endmethod

  method fnop()
    die('not implemented: fnop')
  endmethod

  method fpatan()
    die('not implemented: fpatan')
  endmethod

  method fprem()
    die('not implemented: fprem')
  endmethod

  method fptan()
    die('not implemented: fptan')
  endmethod

  method frndint()
    die('not implemented: frndint')
  endmethod

  method fscale()
    die('not implemented: fscale')
  endmethod

  method fsqrt()
    die('not implemented: fsqrt')
  endmethod

  method ftst()
    die('not implemented: ftst')
  endmethod

  method fwait()
    die('not implemented: fwait')
  endmethod

  method fxam()
    die('not implemented: fxam')
  endmethod

  method fxtract()
    die('not implemented: fxtract')
  endmethod

  method fyl2x()
    die('not implemented: fyl2x')
  endmethod

  method fyl2xp1()
    die('not implemented: fyl2xp1')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with 80287:
  #-----------------------------------------------------------------------------
  # fsetpm 80287 only
  #-----------------------------------------------------------------------------
  # Mnemonics added with 80387:
  #-----------------------------------------------------------------------------
  method fucom()
    die('not implemented: fucom')
  endmethod

  method fucom_sti(stDst)
    die('not implemented: fucom sti')
  endmethod

  method fucomp()
    die('not implemented: fucomp')
  endmethod

  method fucomp_sti(stDst)
    die('not implemented: fucomp sti')
  endmethod

  method fldenvd_m(regBase, scale, regIndex, disp)
    die('not implemented: fldenvd m')
  endmethod

  method fsaved_m(regBase, scale, regIndex, disp)
    die('not implemented: fsaved m')
  endmethod

  method fstenvd_m(regBase, scale, regIndex, disp)
    die('not implemented: fstenvd m')
  endmethod

  method frstord_m(regBase, scale, regIndex, disp)
    die('not implemented: frstord m')
  endmethod

  method fsin()
    die('not implemented: fsin')
  endmethod

  method fcos()
    die('not implemented: fcos')
  endmethod

  method fsincos()
    die('not implemented: fsincos')
  endmethod

  method fprem1()
    die('not implemented: fprem1')
  endmethod

  method fucompp()
    die('not implemented: fucompp')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with Penium Pro:
  #-----------------------------------------------------------------------------
  method fcmovb_sti_sti(stDst, stSrc)
    die('not implemented: fcmovb st0,sti')
  endmethod

  method fcmovbe_sti_sti(stDst, stSrc)
    die('not implemented: fcmovbe st0,sti')
  endmethod

  method fcmove_sti_sti(stDst, stSrc)
    die('not implemented: fcmove st0,sti')
  endmethod

  method fcmovnb_sti_sti(stDst, stSrc)
    die('not implemented: fcmovnb st0,sti')
  endmethod

  method fcmovnbe_sti_sti(stDst, stSrc)
    die('not implemented: fcmovnbe st0,sti')
  endmethod

  method fcmovne_sti_sti(stDst, stSrc)
    die('not implemented: fcmovne st0,sti')
  endmethod

  method fcmovnu_sti_sti(stDst, stSrc)
    die('not implemented: fcmovnu st0,sti')
  endmethod

  method fcmovu_sti_sti(stDst, stSrc)
    die('not implemented: fcmovu st0,sti')
  endmethod

  method fcomi_sti_sti(stDst, stSrc)
    die('not implemented: fcomi st0,sti')
  endmethod

  method fcomip_sti_sti(stDst, stSrc)
    die('not implemented: fcomip st0,sti')
  endmethod

  method fucomi_sti_sti(stDst, stSrc)
    die('not implemented: fucomi st0,sti')
  endmethod

  method fucomip_sti_sti(stDst, stSrc)
    die('not implemented: fucomip st0,sti')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with SSE extension:
  #-----------------------------------------------------------------------------
  method fxrstor_m(regBase, scale, regIndex, disp)
    die('not implemented: fxrstor m')
  endmethod

  method fxsave_m(regBase, scale, regIndex, disp)
    die('not implemented: fxsave m')
  endmethod

  #-----------------------------------------------------------------------------
  # Mnemonics added with SSE3 extension:
  #-----------------------------------------------------------------------------
  method fisttp_m(regBase, scale, regIndex, disp)
    die('not implemented: fisttp m')
  endmethod
