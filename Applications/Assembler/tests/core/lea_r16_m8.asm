use64
lea ax, byte [rip + 0x13]
lea ax, byte [rip + 0x1235]
lea ax, byte [rip + 0x12345679]
lea ax, byte[rbx]
lea ax, byte [rcx + 0x14]
lea ax, byte [rdx + 0x15]
lea ax, byte [rbx + 0x1235]
lea ax, byte [rbx + 0x12345679]
lea ax, byte [rbx + rcx]
lea ax, byte [rbx + 4 * rcx]
lea ax, byte [rbx + rcx + 0x13]
lea ax, byte [rbx + rcx + 0x1235]
lea ax, byte [rbx + rcx + 0x12345679]
lea ax, byte [rbx + 4 * rcx + 0x13]
lea ax, byte [rbx + 4 * rcx + 0x1235]
lea ax, byte [rbx + 8 * rcx + 0x12345679]
lea ax, byte [4 * rcx]
lea ax, byte [4 * rcx + 0x13]
lea ax, byte [4 * rcx + 0x1235]
lea ax, byte [4 * rcx + 0x12345679]
lea ax, byte [rbp]
lea ax, byte [rbp + 0x12]
lea ax, byte [rbp + 0x1234]
lea ax, byte [rbp + 0x12345678]
lea ax, byte [4 * rbp]
lea ax, byte [4 * rbp + 0x12]
lea ax, byte [4 * rbp + 0x1234]
lea ax, byte [4 * rbp + 0x12345678]
lea ax, byte [rbx + 4 * rbp]
lea ax, byte [rbx + 4 * rbp + 0x12]
lea ax, byte [rbx + 4 * rbp + 0x1234]
lea ax, byte [rbx + 4 * rbp + 0x12345678]
lea ax, byte [rsp]
lea ax, byte [rsp + 0x12]
lea ax, byte [rsp + 0x1234]
lea ax, byte [rsp + 0x12345678]
lea ax, byte [rsp + rax]
lea ax, byte [rsp + rbp]
lea ax, byte [rsp + 2*rbp]
lea ax, byte [rsp + 4*rbp]
lea ax, byte [rsp + 8*rbp]
lea ax, byte [rax]
lea ax, byte [rcx]
lea ax, byte [rdx]
lea ax, byte [rbx]
lea ax, byte [rsp]
lea ax, byte [rbp]
lea ax, byte [rsi]
lea ax, byte [rdi]
lea ax, byte [rax + 2*rax]
lea ax, byte [rcx + 2*rcx]
lea ax, byte [rdx + 2*rdx]
lea ax, byte [rbx + 2*rbx]
lea ax, byte [rbp + 2*rbp]
lea ax, byte [rsi + 2*rsi]
lea ax, byte [rdi + 2*rdi]
lea cx, byte [rip + 0x13]
lea cx, byte [rip + 0x1235]
lea cx, byte [rip + 0x12345679]
lea cx, byte[rbx]
lea cx, byte [rcx + 0x14]
lea cx, byte [rdx + 0x15]
lea cx, byte [rbx + 0x1235]
lea cx, byte [rbx + 0x12345679]
lea cx, byte [rbx + rcx]
lea cx, byte [rbx + 4 * rcx]
lea cx, byte [rbx + rcx + 0x13]
lea cx, byte [rbx + rcx + 0x1235]
lea cx, byte [rbx + rcx + 0x12345679]
lea cx, byte [rbx + 4 * rcx + 0x13]
lea cx, byte [rbx + 4 * rcx + 0x1235]
lea cx, byte [rbx + 8 * rcx + 0x12345679]
lea cx, byte [4 * rcx]
lea cx, byte [4 * rcx + 0x13]
lea cx, byte [4 * rcx + 0x1235]
lea cx, byte [4 * rcx + 0x12345679]
lea cx, byte [rbp]
lea cx, byte [rbp + 0x12]
lea cx, byte [rbp + 0x1234]
lea cx, byte [rbp + 0x12345678]
lea cx, byte [4 * rbp]
lea cx, byte [4 * rbp + 0x12]
lea cx, byte [4 * rbp + 0x1234]
lea cx, byte [4 * rbp + 0x12345678]
lea cx, byte [rbx + 4 * rbp]
lea cx, byte [rbx + 4 * rbp + 0x12]
lea cx, byte [rbx + 4 * rbp + 0x1234]
lea cx, byte [rbx + 4 * rbp + 0x12345678]
lea cx, byte [rsp]
lea cx, byte [rsp + 0x12]
lea cx, byte [rsp + 0x1234]
lea cx, byte [rsp + 0x12345678]
lea cx, byte [rsp + rax]
lea cx, byte [rsp + rbp]
lea cx, byte [rsp + 2*rbp]
lea cx, byte [rsp + 4*rbp]
lea cx, byte [rsp + 8*rbp]
lea cx, byte [rax]
lea cx, byte [rcx]
lea cx, byte [rdx]
lea cx, byte [rbx]
lea cx, byte [rsp]
lea cx, byte [rbp]
lea cx, byte [rsi]
lea cx, byte [rdi]
lea cx, byte [rax + 2*rax]
lea cx, byte [rcx + 2*rcx]
lea cx, byte [rdx + 2*rdx]
lea cx, byte [rbx + 2*rbx]
lea cx, byte [rbp + 2*rbp]
lea cx, byte [rsi + 2*rsi]
lea cx, byte [rdi + 2*rdi]
lea dx, byte [rip + 0x13]
lea dx, byte [rip + 0x1235]
lea dx, byte [rip + 0x12345679]
lea dx, byte[rbx]
lea dx, byte [rcx + 0x14]
lea dx, byte [rdx + 0x15]
lea dx, byte [rbx + 0x1235]
lea dx, byte [rbx + 0x12345679]
lea dx, byte [rbx + rcx]
lea dx, byte [rbx + 4 * rcx]
lea dx, byte [rbx + rcx + 0x13]
lea dx, byte [rbx + rcx + 0x1235]
lea dx, byte [rbx + rcx + 0x12345679]
lea dx, byte [rbx + 4 * rcx + 0x13]
lea dx, byte [rbx + 4 * rcx + 0x1235]
lea dx, byte [rbx + 8 * rcx + 0x12345679]
lea dx, byte [4 * rcx]
lea dx, byte [4 * rcx + 0x13]
lea dx, byte [4 * rcx + 0x1235]
lea dx, byte [4 * rcx + 0x12345679]
lea dx, byte [rbp]
lea dx, byte [rbp + 0x12]
lea dx, byte [rbp + 0x1234]
lea dx, byte [rbp + 0x12345678]
lea dx, byte [4 * rbp]
lea dx, byte [4 * rbp + 0x12]
lea dx, byte [4 * rbp + 0x1234]
lea dx, byte [4 * rbp + 0x12345678]
lea dx, byte [rbx + 4 * rbp]
lea dx, byte [rbx + 4 * rbp + 0x12]
lea dx, byte [rbx + 4 * rbp + 0x1234]
lea dx, byte [rbx + 4 * rbp + 0x12345678]
lea dx, byte [rsp]
lea dx, byte [rsp + 0x12]
lea dx, byte [rsp + 0x1234]
lea dx, byte [rsp + 0x12345678]
lea dx, byte [rsp + rax]
lea dx, byte [rsp + rbp]
lea dx, byte [rsp + 2*rbp]
lea dx, byte [rsp + 4*rbp]
lea dx, byte [rsp + 8*rbp]
lea dx, byte [rax]
lea dx, byte [rcx]
lea dx, byte [rdx]
lea dx, byte [rbx]
lea dx, byte [rsp]
lea dx, byte [rbp]
lea dx, byte [rsi]
lea dx, byte [rdi]
lea dx, byte [rax + 2*rax]
lea dx, byte [rcx + 2*rcx]
lea dx, byte [rdx + 2*rdx]
lea dx, byte [rbx + 2*rbx]
lea dx, byte [rbp + 2*rbp]
lea dx, byte [rsi + 2*rsi]
lea dx, byte [rdi + 2*rdi]
lea bx, byte [rip + 0x13]
lea bx, byte [rip + 0x1235]
lea bx, byte [rip + 0x12345679]
lea bx, byte[rbx]
lea bx, byte [rcx + 0x14]
lea bx, byte [rdx + 0x15]
lea bx, byte [rbx + 0x1235]
lea bx, byte [rbx + 0x12345679]
lea bx, byte [rbx + rcx]
lea bx, byte [rbx + 4 * rcx]
lea bx, byte [rbx + rcx + 0x13]
lea bx, byte [rbx + rcx + 0x1235]
lea bx, byte [rbx + rcx + 0x12345679]
lea bx, byte [rbx + 4 * rcx + 0x13]
lea bx, byte [rbx + 4 * rcx + 0x1235]
lea bx, byte [rbx + 8 * rcx + 0x12345679]
lea bx, byte [4 * rcx]
lea bx, byte [4 * rcx + 0x13]
lea bx, byte [4 * rcx + 0x1235]
lea bx, byte [4 * rcx + 0x12345679]
lea bx, byte [rbp]
lea bx, byte [rbp + 0x12]
lea bx, byte [rbp + 0x1234]
lea bx, byte [rbp + 0x12345678]
lea bx, byte [4 * rbp]
lea bx, byte [4 * rbp + 0x12]
lea bx, byte [4 * rbp + 0x1234]
lea bx, byte [4 * rbp + 0x12345678]
lea bx, byte [rbx + 4 * rbp]
lea bx, byte [rbx + 4 * rbp + 0x12]
lea bx, byte [rbx + 4 * rbp + 0x1234]
lea bx, byte [rbx + 4 * rbp + 0x12345678]
lea bx, byte [rsp]
lea bx, byte [rsp + 0x12]
lea bx, byte [rsp + 0x1234]
lea bx, byte [rsp + 0x12345678]
lea bx, byte [rsp + rax]
lea bx, byte [rsp + rbp]
lea bx, byte [rsp + 2*rbp]
lea bx, byte [rsp + 4*rbp]
lea bx, byte [rsp + 8*rbp]
lea bx, byte [rax]
lea bx, byte [rcx]
lea bx, byte [rdx]
lea bx, byte [rbx]
lea bx, byte [rsp]
lea bx, byte [rbp]
lea bx, byte [rsi]
lea bx, byte [rdi]
lea bx, byte [rax + 2*rax]
lea bx, byte [rcx + 2*rcx]
lea bx, byte [rdx + 2*rdx]
lea bx, byte [rbx + 2*rbx]
lea bx, byte [rbp + 2*rbp]
lea bx, byte [rsi + 2*rsi]
lea bx, byte [rdi + 2*rdi]
lea sp, byte [rip + 0x13]
lea sp, byte [rip + 0x1235]
lea sp, byte [rip + 0x12345679]
lea sp, byte[rbx]
lea sp, byte [rcx + 0x14]
lea sp, byte [rdx + 0x15]
lea sp, byte [rbx + 0x1235]
lea sp, byte [rbx + 0x12345679]
lea sp, byte [rbx + rcx]
lea sp, byte [rbx + 4 * rcx]
lea sp, byte [rbx + rcx + 0x13]
lea sp, byte [rbx + rcx + 0x1235]
lea sp, byte [rbx + rcx + 0x12345679]
lea sp, byte [rbx + 4 * rcx + 0x13]
lea sp, byte [rbx + 4 * rcx + 0x1235]
lea sp, byte [rbx + 8 * rcx + 0x12345679]
lea sp, byte [4 * rcx]
lea sp, byte [4 * rcx + 0x13]
lea sp, byte [4 * rcx + 0x1235]
lea sp, byte [4 * rcx + 0x12345679]
lea sp, byte [rbp]
lea sp, byte [rbp + 0x12]
lea sp, byte [rbp + 0x1234]
lea sp, byte [rbp + 0x12345678]
lea sp, byte [4 * rbp]
lea sp, byte [4 * rbp + 0x12]
lea sp, byte [4 * rbp + 0x1234]
lea sp, byte [4 * rbp + 0x12345678]
lea sp, byte [rbx + 4 * rbp]
lea sp, byte [rbx + 4 * rbp + 0x12]
lea sp, byte [rbx + 4 * rbp + 0x1234]
lea sp, byte [rbx + 4 * rbp + 0x12345678]
lea sp, byte [rsp]
lea sp, byte [rsp + 0x12]
lea sp, byte [rsp + 0x1234]
lea sp, byte [rsp + 0x12345678]
lea sp, byte [rsp + rax]
lea sp, byte [rsp + rbp]
lea sp, byte [rsp + 2*rbp]
lea sp, byte [rsp + 4*rbp]
lea sp, byte [rsp + 8*rbp]
lea sp, byte [rax]
lea sp, byte [rcx]
lea sp, byte [rdx]
lea sp, byte [rbx]
lea sp, byte [rsp]
lea sp, byte [rbp]
lea sp, byte [rsi]
lea sp, byte [rdi]
lea sp, byte [rax + 2*rax]
lea sp, byte [rcx + 2*rcx]
lea sp, byte [rdx + 2*rdx]
lea sp, byte [rbx + 2*rbx]
lea sp, byte [rbp + 2*rbp]
lea sp, byte [rsi + 2*rsi]
lea sp, byte [rdi + 2*rdi]
lea bp, byte [rip + 0x13]
lea bp, byte [rip + 0x1235]
lea bp, byte [rip + 0x12345679]
lea bp, byte[rbx]
lea bp, byte [rcx + 0x14]
lea bp, byte [rdx + 0x15]
lea bp, byte [rbx + 0x1235]
lea bp, byte [rbx + 0x12345679]
lea bp, byte [rbx + rcx]
lea bp, byte [rbx + 4 * rcx]
lea bp, byte [rbx + rcx + 0x13]
lea bp, byte [rbx + rcx + 0x1235]
lea bp, byte [rbx + rcx + 0x12345679]
lea bp, byte [rbx + 4 * rcx + 0x13]
lea bp, byte [rbx + 4 * rcx + 0x1235]
lea bp, byte [rbx + 8 * rcx + 0x12345679]
lea bp, byte [4 * rcx]
lea bp, byte [4 * rcx + 0x13]
lea bp, byte [4 * rcx + 0x1235]
lea bp, byte [4 * rcx + 0x12345679]
lea bp, byte [rbp]
lea bp, byte [rbp + 0x12]
lea bp, byte [rbp + 0x1234]
lea bp, byte [rbp + 0x12345678]
lea bp, byte [4 * rbp]
lea bp, byte [4 * rbp + 0x12]
lea bp, byte [4 * rbp + 0x1234]
lea bp, byte [4 * rbp + 0x12345678]
lea bp, byte [rbx + 4 * rbp]
lea bp, byte [rbx + 4 * rbp + 0x12]
lea bp, byte [rbx + 4 * rbp + 0x1234]
lea bp, byte [rbx + 4 * rbp + 0x12345678]
lea bp, byte [rsp]
lea bp, byte [rsp + 0x12]
lea bp, byte [rsp + 0x1234]
lea bp, byte [rsp + 0x12345678]
lea bp, byte [rsp + rax]
lea bp, byte [rsp + rbp]
lea bp, byte [rsp + 2*rbp]
lea bp, byte [rsp + 4*rbp]
lea bp, byte [rsp + 8*rbp]
lea bp, byte [rax]
lea bp, byte [rcx]
lea bp, byte [rdx]
lea bp, byte [rbx]
lea bp, byte [rsp]
lea bp, byte [rbp]
lea bp, byte [rsi]
lea bp, byte [rdi]
lea bp, byte [rax + 2*rax]
lea bp, byte [rcx + 2*rcx]
lea bp, byte [rdx + 2*rdx]
lea bp, byte [rbx + 2*rbx]
lea bp, byte [rbp + 2*rbp]
lea bp, byte [rsi + 2*rsi]
lea bp, byte [rdi + 2*rdi]
lea si, byte [rip + 0x13]
lea si, byte [rip + 0x1235]
lea si, byte [rip + 0x12345679]
lea si, byte[rbx]
lea si, byte [rcx + 0x14]
lea si, byte [rdx + 0x15]
lea si, byte [rbx + 0x1235]
lea si, byte [rbx + 0x12345679]
lea si, byte [rbx + rcx]
lea si, byte [rbx + 4 * rcx]
lea si, byte [rbx + rcx + 0x13]
lea si, byte [rbx + rcx + 0x1235]
lea si, byte [rbx + rcx + 0x12345679]
lea si, byte [rbx + 4 * rcx + 0x13]
lea si, byte [rbx + 4 * rcx + 0x1235]
lea si, byte [rbx + 8 * rcx + 0x12345679]
lea si, byte [4 * rcx]
lea si, byte [4 * rcx + 0x13]
lea si, byte [4 * rcx + 0x1235]
lea si, byte [4 * rcx + 0x12345679]
lea si, byte [rbp]
lea si, byte [rbp + 0x12]
lea si, byte [rbp + 0x1234]
lea si, byte [rbp + 0x12345678]
lea si, byte [4 * rbp]
lea si, byte [4 * rbp + 0x12]
lea si, byte [4 * rbp + 0x1234]
lea si, byte [4 * rbp + 0x12345678]
lea si, byte [rbx + 4 * rbp]
lea si, byte [rbx + 4 * rbp + 0x12]
lea si, byte [rbx + 4 * rbp + 0x1234]
lea si, byte [rbx + 4 * rbp + 0x12345678]
lea si, byte [rsp]
lea si, byte [rsp + 0x12]
lea si, byte [rsp + 0x1234]
lea si, byte [rsp + 0x12345678]
lea si, byte [rsp + rax]
lea si, byte [rsp + rbp]
lea si, byte [rsp + 2*rbp]
lea si, byte [rsp + 4*rbp]
lea si, byte [rsp + 8*rbp]
lea si, byte [rax]
lea si, byte [rcx]
lea si, byte [rdx]
lea si, byte [rbx]
lea si, byte [rsp]
lea si, byte [rbp]
lea si, byte [rsi]
lea si, byte [rdi]
lea si, byte [rax + 2*rax]
lea si, byte [rcx + 2*rcx]
lea si, byte [rdx + 2*rdx]
lea si, byte [rbx + 2*rbx]
lea si, byte [rbp + 2*rbp]
lea si, byte [rsi + 2*rsi]
lea si, byte [rdi + 2*rdi]
lea di, byte [rip + 0x13]
lea di, byte [rip + 0x1235]
lea di, byte [rip + 0x12345679]
lea di, byte[rbx]
lea di, byte [rcx + 0x14]
lea di, byte [rdx + 0x15]
lea di, byte [rbx + 0x1235]
lea di, byte [rbx + 0x12345679]
lea di, byte [rbx + rcx]
lea di, byte [rbx + 4 * rcx]
lea di, byte [rbx + rcx + 0x13]
lea di, byte [rbx + rcx + 0x1235]
lea di, byte [rbx + rcx + 0x12345679]
lea di, byte [rbx + 4 * rcx + 0x13]
lea di, byte [rbx + 4 * rcx + 0x1235]
lea di, byte [rbx + 8 * rcx + 0x12345679]
lea di, byte [4 * rcx]
lea di, byte [4 * rcx + 0x13]
lea di, byte [4 * rcx + 0x1235]
lea di, byte [4 * rcx + 0x12345679]
lea di, byte [rbp]
lea di, byte [rbp + 0x12]
lea di, byte [rbp + 0x1234]
lea di, byte [rbp + 0x12345678]
lea di, byte [4 * rbp]
lea di, byte [4 * rbp + 0x12]
lea di, byte [4 * rbp + 0x1234]
lea di, byte [4 * rbp + 0x12345678]
lea di, byte [rbx + 4 * rbp]
lea di, byte [rbx + 4 * rbp + 0x12]
lea di, byte [rbx + 4 * rbp + 0x1234]
lea di, byte [rbx + 4 * rbp + 0x12345678]
lea di, byte [rsp]
lea di, byte [rsp + 0x12]
lea di, byte [rsp + 0x1234]
lea di, byte [rsp + 0x12345678]
lea di, byte [rsp + rax]
lea di, byte [rsp + rbp]
lea di, byte [rsp + 2*rbp]
lea di, byte [rsp + 4*rbp]
lea di, byte [rsp + 8*rbp]
lea di, byte [rax]
lea di, byte [rcx]
lea di, byte [rdx]
lea di, byte [rbx]
lea di, byte [rsp]
lea di, byte [rbp]
lea di, byte [rsi]
lea di, byte [rdi]
lea di, byte [rax + 2*rax]
lea di, byte [rcx + 2*rcx]
lea di, byte [rdx + 2*rdx]
lea di, byte [rbx + 2*rbx]
lea di, byte [rbp + 2*rbp]
lea di, byte [rsi + 2*rsi]
lea di, byte [rdi + 2*rdi]
