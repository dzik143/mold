use64
; ------------------------------------------------------------------------------
; opcode m128
; ------------------------------------------------------------------------------
cmpxchg16b [rip + 0x13]
cmpxchg16b [rip + 0x1235]
cmpxchg16b [rip + 0x12345679]
cmpxchg16b [rbx]
cmpxchg16b [rcx + 0x14]
cmpxchg16b [rdx + 0x15]
cmpxchg16b [rbx + 0x1235]
cmpxchg16b [rbx + 0x12345679]
cmpxchg16b [rbx + rcx]
cmpxchg16b [rbx + 4 * rcx]
cmpxchg16b [rbx + rcx + 0x13]
cmpxchg16b [rbx + rcx + 0x1235]
cmpxchg16b [rbx + rcx + 0x12345679]
cmpxchg16b [rbx + 4 * rcx + 0x13]
cmpxchg16b [rbx + 4 * rcx + 0x1235]
cmpxchg16b [rbx + 8 * rcx + 0x12345679]
cmpxchg16b [4 * rcx]
cmpxchg16b [4 * rcx + 0x13]
cmpxchg16b [4 * rcx + 0x1235]
cmpxchg16b [4 * rcx + 0x12345679]
cmpxchg16b [rbp]
cmpxchg16b [rbp + 0x12]
cmpxchg16b [rbp + 0x1234]
cmpxchg16b [rbp + 0x12345678]
cmpxchg16b [4 * rbp]
cmpxchg16b [4 * rbp + 0x12]
cmpxchg16b [4 * rbp + 0x1234]
cmpxchg16b [4 * rbp + 0x12345678]
cmpxchg16b [rbx + 4 * rbp]
cmpxchg16b [rbx + 4 * rbp + 0x12]
cmpxchg16b [rbx + 4 * rbp + 0x1234]
cmpxchg16b [rbx + 4 * rbp + 0x12345678]
cmpxchg16b [rsp]
cmpxchg16b [rsp + 0x12]
cmpxchg16b [rsp + 0x1234]
cmpxchg16b [rsp + 0x12345678]
cmpxchg16b [rsp + rax]
cmpxchg16b [rsp + rbp]
cmpxchg16b [rsp + 2*rbp]
cmpxchg16b [rsp + 4*rbp]
cmpxchg16b [rsp + 8*rbp]
cmpxchg16b [rax]
cmpxchg16b [rcx]
cmpxchg16b [rdx]
cmpxchg16b [rbx]
cmpxchg16b [rsp]
cmpxchg16b [rbp]
cmpxchg16b [rsi]
cmpxchg16b [rdi]
cmpxchg16b [rax + 2*rax]
cmpxchg16b [rcx + 2*rcx]
cmpxchg16b [rdx + 2*rdx]
cmpxchg16b [rbx + 2*rbx]
cmpxchg16b [rbp + 2*rbp]
cmpxchg16b [rsi + 2*rsi]
cmpxchg16b [rdi + 2*rdi]

