;###############################################################################
;#                                                                             #
;# This file is part of Mold project.                                          #
;# Copyright (C) 2015, 2019 Sylwester Wysocki <sw143@wp.pl>                    #
;#                                                                             #
;# This program is free software: you can redistribute it and/or modify        #
;# it under the terms of the GNU General Public License as published by        #
;# the Free Software Foundation, either version 3 of the License, or           #
;# (at your option) any later version.                                         #
;#                                                                             #
;# This program is distributed in the hope that it will be useful,             #
;# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
;# GNU General Public License for more details.                                #
;#                                                                             #
;# You should have received a copy of the GNU General Public License           #
;# along with this program. If not, see <http://www.gnu.org/licenses/>         #
;#                                                                             #
;###############################################################################

; ------------------------------------------------------------------------------
; Original mnemonics from 8086 processor.
; Please note that this is mnemonics, not a opcodes list.
; For example, with a few exceptions, only 16-bit operands were
; available in original 8086.
; Jumps and calls are moved to core-jumps group.
; ------------------------------------------------------------------------------

;aaa     invalid in 64-bit mode
;aad     invalid in 64-bit mode
;aam     invalid in 64-bit mode
;lahf    invalid in 64-bit mode
;aas     invalid in 64-bit mode
;das     invalid in 64-bit mode
;sahf    invalid in 64-bit mode
;lds     invalid in 64-bit mode
;les     invalid in 64-bit mode
;daa     invalid in 64-bit mode
;loopw   unavailable in 64-bit mode
;loopew  unavailable in 64-bit mode
;loopnew unavailable in 64-bit mode

adc
add
and
cbw
clc
cld
cli
cmc
cmp
cmpsb
cmpsw
cwd
dec
div
hlt
idiv
imul
in
inc
int
into
iret
lea
lock
lodsb
lodsw
loop
loope
loopne
mov
movsb
movsw
mul
neg
nop
not
or
out
pop
popf
push
pushf
rcl
rcr
rep
repe
repne
ret
retn
retf
rol
ror
sal
sar
sbb
scasb
scasw
shl
shr
stc
std
sti
stosb
stosw
sub
test
wait
xchg
xlat
xor

; ------------------------------------------------------------------------------
; Mnemonics added with 80186 processor:
; ------------------------------------------------------------------------------

enter
ins
leave
outs

;bound invalid in 64-bit mode
;popa  invalid in 64-bit mode
;pusha invalid in 64-bit mode
;push imm (already handled)
;imul imm (already handled)
;shl  imm (already handled)
;shr  imm (already handled)
;sal  imm (already handled)
;sar  imm (already handled)
;rol  imm (already handled)
;ror  imm (already handled)
;rcl  imm (already handled)
;rcr  imm (already handled)

; ------------------------------------------------------------------------------
; Mnemonics added with 80286 processor:
; ------------------------------------------------------------------------------

;arpl invalid in 64-bit mode
clts
lar
lgdt
lidt
lldt
lmsw
loadall
lsl
ltr
sgdt
sidt
sldt
smsw
str
verr
verw

; ------------------------------------------------------------------------------
; Mnemonics added with 80386 processor:
; ------------------------------------------------------------------------------

;pushad invalid in 64-bit mode
;popad  invalid in 64-bit mode
;pushfd invalid in 64-bit mode
;popfd  invalid in 64-bit mode
;mov to/from CR/DR/TR (already handled)
bsf
bsr
bt
btc
btr
bts
cdq
cmpsd
cwde
ibts
insd
iretd
lfs
lgs
lss
lodsd
looped
loopned
movsd
movsx
movzx
outsd
scasd
seta
setae
setb 
setbe
setc
sete
setg
setge
setl
setle
setna
setnae
setnb
setnbe
setnc
setne
setng
setnge
setnl
setnle
setno
setnp
setns
setnz
seto
setp
setpe
setpo
sets
setz
shld
shrd
stosd
xbts

; ------------------------------------------------------------------------------
; Mnemonics added with 80486 processor:
; ------------------------------------------------------------------------------

bswap
cmpxchg
invd
invlpg
wbinvd
xadd

; ------------------------------------------------------------------------------
; Mnemonics added with Penitum processor: 
; ------------------------------------------------------------------------------

cpuid
cmpxchg8b
rdmsr
rdtsc
wrmsr
rsm

; ------------------------------------------------------------------------------
; Mnemonics added with Penitum Pro processor:
; ------------------------------------------------------------------------------

cmova
cmovae
cmovb
cmovbe
cmovc
cmove
cmovg
cmovge
cmovl
cmovle
cmovna
cmovnae
cmovnb
cmovnbe
cmovnc
cmovne
cmovng
cmovnge
cmovnl
cmovnle
cmovno
cmovnp
cmovns
cmovnz
cmovo
cmovp
cmovpe
cmovpo
cmovs
cmovz
ud2

; ------------------------------------------------------------------------------
; Mnemonics added with AMD K6 processor:
; ------------------------------------------------------------------------------

syscall
sysret

; ------------------------------------------------------------------------------
; Mnemonics added with Penitum II:
; ------------------------------------------------------------------------------

sysenter
sysexit

; ------------------------------------------------------------------------------
; Mnemonics added with Amd64:
; ------------------------------------------------------------------------------

cdqe
cqo
cmpsq
cmpxchg16b
iretq
lodsq
movsxd
popfq
pushfq
rdtscp
scasq
stosq
swapgs
