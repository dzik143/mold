use64
lea rax, byte [rip + 0x13]
lea rax, byte [rip + 0x1235]
lea rax, byte [rip + 0x12345679]
lea rax, byte[rbx]
lea rax, byte [rcx + 0x14]
lea rax, byte [rdx + 0x15]
lea rax, byte [rbx + 0x1235]
lea rax, byte [rbx + 0x12345679]
lea rax, byte [rbx + rcx]
lea rax, byte [rbx + 4 * rcx]
lea rax, byte [rbx + rcx + 0x13]
lea rax, byte [rbx + rcx + 0x1235]
lea rax, byte [rbx + rcx + 0x12345679]
lea rax, byte [rbx + 4 * rcx + 0x13]
lea rax, byte [rbx + 4 * rcx + 0x1235]
lea rax, byte [rbx + 8 * rcx + 0x12345679]
lea rax, byte [4 * rcx]
lea rax, byte [4 * rcx + 0x13]
lea rax, byte [4 * rcx + 0x1235]
lea rax, byte [4 * rcx + 0x12345679]
lea rax, byte [rbp]
lea rax, byte [rbp + 0x12]
lea rax, byte [rbp + 0x1234]
lea rax, byte [rbp + 0x12345678]
lea rax, byte [4 * rbp]
lea rax, byte [4 * rbp + 0x12]
lea rax, byte [4 * rbp + 0x1234]
lea rax, byte [4 * rbp + 0x12345678]
lea rax, byte [rbx + 4 * rbp]
lea rax, byte [rbx + 4 * rbp + 0x12]
lea rax, byte [rbx + 4 * rbp + 0x1234]
lea rax, byte [rbx + 4 * rbp + 0x12345678]
lea rax, byte [rsp]
lea rax, byte [rsp + 0x12]
lea rax, byte [rsp + 0x1234]
lea rax, byte [rsp + 0x12345678]
lea rax, byte [rsp + rax]
lea rax, byte [rsp + rbp]
lea rax, byte [rsp + 2*rbp]
lea rax, byte [rsp + 4*rbp]
lea rax, byte [rsp + 8*rbp]
lea rax, byte [rax]
lea rax, byte [rcx]
lea rax, byte [rdx]
lea rax, byte [rbx]
lea rax, byte [rsp]
lea rax, byte [rbp]
lea rax, byte [rsi]
lea rax, byte [rdi]
lea rax, byte [rax + 2*rax]
lea rax, byte [rcx + 2*rcx]
lea rax, byte [rdx + 2*rdx]
lea rax, byte [rbx + 2*rbx]
lea rax, byte [rbp + 2*rbp]
lea rax, byte [rsi + 2*rsi]
lea rax, byte [rdi + 2*rdi]
lea rcx, byte [rip + 0x13]
lea rcx, byte [rip + 0x1235]
lea rcx, byte [rip + 0x12345679]
lea rcx, byte[rbx]
lea rcx, byte [rcx + 0x14]
lea rcx, byte [rdx + 0x15]
lea rcx, byte [rbx + 0x1235]
lea rcx, byte [rbx + 0x12345679]
lea rcx, byte [rbx + rcx]
lea rcx, byte [rbx + 4 * rcx]
lea rcx, byte [rbx + rcx + 0x13]
lea rcx, byte [rbx + rcx + 0x1235]
lea rcx, byte [rbx + rcx + 0x12345679]
lea rcx, byte [rbx + 4 * rcx + 0x13]
lea rcx, byte [rbx + 4 * rcx + 0x1235]
lea rcx, byte [rbx + 8 * rcx + 0x12345679]
lea rcx, byte [4 * rcx]
lea rcx, byte [4 * rcx + 0x13]
lea rcx, byte [4 * rcx + 0x1235]
lea rcx, byte [4 * rcx + 0x12345679]
lea rcx, byte [rbp]
lea rcx, byte [rbp + 0x12]
lea rcx, byte [rbp + 0x1234]
lea rcx, byte [rbp + 0x12345678]
lea rcx, byte [4 * rbp]
lea rcx, byte [4 * rbp + 0x12]
lea rcx, byte [4 * rbp + 0x1234]
lea rcx, byte [4 * rbp + 0x12345678]
lea rcx, byte [rbx + 4 * rbp]
lea rcx, byte [rbx + 4 * rbp + 0x12]
lea rcx, byte [rbx + 4 * rbp + 0x1234]
lea rcx, byte [rbx + 4 * rbp + 0x12345678]
lea rcx, byte [rsp]
lea rcx, byte [rsp + 0x12]
lea rcx, byte [rsp + 0x1234]
lea rcx, byte [rsp + 0x12345678]
lea rcx, byte [rsp + rax]
lea rcx, byte [rsp + rbp]
lea rcx, byte [rsp + 2*rbp]
lea rcx, byte [rsp + 4*rbp]
lea rcx, byte [rsp + 8*rbp]
lea rcx, byte [rax]
lea rcx, byte [rcx]
lea rcx, byte [rdx]
lea rcx, byte [rbx]
lea rcx, byte [rsp]
lea rcx, byte [rbp]
lea rcx, byte [rsi]
lea rcx, byte [rdi]
lea rcx, byte [rax + 2*rax]
lea rcx, byte [rcx + 2*rcx]
lea rcx, byte [rdx + 2*rdx]
lea rcx, byte [rbx + 2*rbx]
lea rcx, byte [rbp + 2*rbp]
lea rcx, byte [rsi + 2*rsi]
lea rcx, byte [rdi + 2*rdi]
lea rdx, byte [rip + 0x13]
lea rdx, byte [rip + 0x1235]
lea rdx, byte [rip + 0x12345679]
lea rdx, byte[rbx]
lea rdx, byte [rcx + 0x14]
lea rdx, byte [rdx + 0x15]
lea rdx, byte [rbx + 0x1235]
lea rdx, byte [rbx + 0x12345679]
lea rdx, byte [rbx + rcx]
lea rdx, byte [rbx + 4 * rcx]
lea rdx, byte [rbx + rcx + 0x13]
lea rdx, byte [rbx + rcx + 0x1235]
lea rdx, byte [rbx + rcx + 0x12345679]
lea rdx, byte [rbx + 4 * rcx + 0x13]
lea rdx, byte [rbx + 4 * rcx + 0x1235]
lea rdx, byte [rbx + 8 * rcx + 0x12345679]
lea rdx, byte [4 * rcx]
lea rdx, byte [4 * rcx + 0x13]
lea rdx, byte [4 * rcx + 0x1235]
lea rdx, byte [4 * rcx + 0x12345679]
lea rdx, byte [rbp]
lea rdx, byte [rbp + 0x12]
lea rdx, byte [rbp + 0x1234]
lea rdx, byte [rbp + 0x12345678]
lea rdx, byte [4 * rbp]
lea rdx, byte [4 * rbp + 0x12]
lea rdx, byte [4 * rbp + 0x1234]
lea rdx, byte [4 * rbp + 0x12345678]
lea rdx, byte [rbx + 4 * rbp]
lea rdx, byte [rbx + 4 * rbp + 0x12]
lea rdx, byte [rbx + 4 * rbp + 0x1234]
lea rdx, byte [rbx + 4 * rbp + 0x12345678]
lea rdx, byte [rsp]
lea rdx, byte [rsp + 0x12]
lea rdx, byte [rsp + 0x1234]
lea rdx, byte [rsp + 0x12345678]
lea rdx, byte [rsp + rax]
lea rdx, byte [rsp + rbp]
lea rdx, byte [rsp + 2*rbp]
lea rdx, byte [rsp + 4*rbp]
lea rdx, byte [rsp + 8*rbp]
lea rdx, byte [rax]
lea rdx, byte [rcx]
lea rdx, byte [rdx]
lea rdx, byte [rbx]
lea rdx, byte [rsp]
lea rdx, byte [rbp]
lea rdx, byte [rsi]
lea rdx, byte [rdi]
lea rdx, byte [rax + 2*rax]
lea rdx, byte [rcx + 2*rcx]
lea rdx, byte [rdx + 2*rdx]
lea rdx, byte [rbx + 2*rbx]
lea rdx, byte [rbp + 2*rbp]
lea rdx, byte [rsi + 2*rsi]
lea rdx, byte [rdi + 2*rdi]
lea rbx, byte [rip + 0x13]
lea rbx, byte [rip + 0x1235]
lea rbx, byte [rip + 0x12345679]
lea rbx, byte[rbx]
lea rbx, byte [rcx + 0x14]
lea rbx, byte [rdx + 0x15]
lea rbx, byte [rbx + 0x1235]
lea rbx, byte [rbx + 0x12345679]
lea rbx, byte [rbx + rcx]
lea rbx, byte [rbx + 4 * rcx]
lea rbx, byte [rbx + rcx + 0x13]
lea rbx, byte [rbx + rcx + 0x1235]
lea rbx, byte [rbx + rcx + 0x12345679]
lea rbx, byte [rbx + 4 * rcx + 0x13]
lea rbx, byte [rbx + 4 * rcx + 0x1235]
lea rbx, byte [rbx + 8 * rcx + 0x12345679]
lea rbx, byte [4 * rcx]
lea rbx, byte [4 * rcx + 0x13]
lea rbx, byte [4 * rcx + 0x1235]
lea rbx, byte [4 * rcx + 0x12345679]
lea rbx, byte [rbp]
lea rbx, byte [rbp + 0x12]
lea rbx, byte [rbp + 0x1234]
lea rbx, byte [rbp + 0x12345678]
lea rbx, byte [4 * rbp]
lea rbx, byte [4 * rbp + 0x12]
lea rbx, byte [4 * rbp + 0x1234]
lea rbx, byte [4 * rbp + 0x12345678]
lea rbx, byte [rbx + 4 * rbp]
lea rbx, byte [rbx + 4 * rbp + 0x12]
lea rbx, byte [rbx + 4 * rbp + 0x1234]
lea rbx, byte [rbx + 4 * rbp + 0x12345678]
lea rbx, byte [rsp]
lea rbx, byte [rsp + 0x12]
lea rbx, byte [rsp + 0x1234]
lea rbx, byte [rsp + 0x12345678]
lea rbx, byte [rsp + rax]
lea rbx, byte [rsp + rbp]
lea rbx, byte [rsp + 2*rbp]
lea rbx, byte [rsp + 4*rbp]
lea rbx, byte [rsp + 8*rbp]
lea rbx, byte [rax]
lea rbx, byte [rcx]
lea rbx, byte [rdx]
lea rbx, byte [rbx]
lea rbx, byte [rsp]
lea rbx, byte [rbp]
lea rbx, byte [rsi]
lea rbx, byte [rdi]
lea rbx, byte [rax + 2*rax]
lea rbx, byte [rcx + 2*rcx]
lea rbx, byte [rdx + 2*rdx]
lea rbx, byte [rbx + 2*rbx]
lea rbx, byte [rbp + 2*rbp]
lea rbx, byte [rsi + 2*rsi]
lea rbx, byte [rdi + 2*rdi]
lea rsp, byte [rip + 0x13]
lea rsp, byte [rip + 0x1235]
lea rsp, byte [rip + 0x12345679]
lea rsp, byte[rbx]
lea rsp, byte [rcx + 0x14]
lea rsp, byte [rdx + 0x15]
lea rsp, byte [rbx + 0x1235]
lea rsp, byte [rbx + 0x12345679]
lea rsp, byte [rbx + rcx]
lea rsp, byte [rbx + 4 * rcx]
lea rsp, byte [rbx + rcx + 0x13]
lea rsp, byte [rbx + rcx + 0x1235]
lea rsp, byte [rbx + rcx + 0x12345679]
lea rsp, byte [rbx + 4 * rcx + 0x13]
lea rsp, byte [rbx + 4 * rcx + 0x1235]
lea rsp, byte [rbx + 8 * rcx + 0x12345679]
lea rsp, byte [4 * rcx]
lea rsp, byte [4 * rcx + 0x13]
lea rsp, byte [4 * rcx + 0x1235]
lea rsp, byte [4 * rcx + 0x12345679]
lea rsp, byte [rbp]
lea rsp, byte [rbp + 0x12]
lea rsp, byte [rbp + 0x1234]
lea rsp, byte [rbp + 0x12345678]
lea rsp, byte [4 * rbp]
lea rsp, byte [4 * rbp + 0x12]
lea rsp, byte [4 * rbp + 0x1234]
lea rsp, byte [4 * rbp + 0x12345678]
lea rsp, byte [rbx + 4 * rbp]
lea rsp, byte [rbx + 4 * rbp + 0x12]
lea rsp, byte [rbx + 4 * rbp + 0x1234]
lea rsp, byte [rbx + 4 * rbp + 0x12345678]
lea rsp, byte [rsp]
lea rsp, byte [rsp + 0x12]
lea rsp, byte [rsp + 0x1234]
lea rsp, byte [rsp + 0x12345678]
lea rsp, byte [rsp + rax]
lea rsp, byte [rsp + rbp]
lea rsp, byte [rsp + 2*rbp]
lea rsp, byte [rsp + 4*rbp]
lea rsp, byte [rsp + 8*rbp]
lea rsp, byte [rax]
lea rsp, byte [rcx]
lea rsp, byte [rdx]
lea rsp, byte [rbx]
lea rsp, byte [rsp]
lea rsp, byte [rbp]
lea rsp, byte [rsi]
lea rsp, byte [rdi]
lea rsp, byte [rax + 2*rax]
lea rsp, byte [rcx + 2*rcx]
lea rsp, byte [rdx + 2*rdx]
lea rsp, byte [rbx + 2*rbx]
lea rsp, byte [rbp + 2*rbp]
lea rsp, byte [rsi + 2*rsi]
lea rsp, byte [rdi + 2*rdi]
lea rbp, byte [rip + 0x13]
lea rbp, byte [rip + 0x1235]
lea rbp, byte [rip + 0x12345679]
lea rbp, byte[rbx]
lea rbp, byte [rcx + 0x14]
lea rbp, byte [rdx + 0x15]
lea rbp, byte [rbx + 0x1235]
lea rbp, byte [rbx + 0x12345679]
lea rbp, byte [rbx + rcx]
lea rbp, byte [rbx + 4 * rcx]
lea rbp, byte [rbx + rcx + 0x13]
lea rbp, byte [rbx + rcx + 0x1235]
lea rbp, byte [rbx + rcx + 0x12345679]
lea rbp, byte [rbx + 4 * rcx + 0x13]
lea rbp, byte [rbx + 4 * rcx + 0x1235]
lea rbp, byte [rbx + 8 * rcx + 0x12345679]
lea rbp, byte [4 * rcx]
lea rbp, byte [4 * rcx + 0x13]
lea rbp, byte [4 * rcx + 0x1235]
lea rbp, byte [4 * rcx + 0x12345679]
lea rbp, byte [rbp]
lea rbp, byte [rbp + 0x12]
lea rbp, byte [rbp + 0x1234]
lea rbp, byte [rbp + 0x12345678]
lea rbp, byte [4 * rbp]
lea rbp, byte [4 * rbp + 0x12]
lea rbp, byte [4 * rbp + 0x1234]
lea rbp, byte [4 * rbp + 0x12345678]
lea rbp, byte [rbx + 4 * rbp]
lea rbp, byte [rbx + 4 * rbp + 0x12]
lea rbp, byte [rbx + 4 * rbp + 0x1234]
lea rbp, byte [rbx + 4 * rbp + 0x12345678]
lea rbp, byte [rsp]
lea rbp, byte [rsp + 0x12]
lea rbp, byte [rsp + 0x1234]
lea rbp, byte [rsp + 0x12345678]
lea rbp, byte [rsp + rax]
lea rbp, byte [rsp + rbp]
lea rbp, byte [rsp + 2*rbp]
lea rbp, byte [rsp + 4*rbp]
lea rbp, byte [rsp + 8*rbp]
lea rbp, byte [rax]
lea rbp, byte [rcx]
lea rbp, byte [rdx]
lea rbp, byte [rbx]
lea rbp, byte [rsp]
lea rbp, byte [rbp]
lea rbp, byte [rsi]
lea rbp, byte [rdi]
lea rbp, byte [rax + 2*rax]
lea rbp, byte [rcx + 2*rcx]
lea rbp, byte [rdx + 2*rdx]
lea rbp, byte [rbx + 2*rbx]
lea rbp, byte [rbp + 2*rbp]
lea rbp, byte [rsi + 2*rsi]
lea rbp, byte [rdi + 2*rdi]
lea rsi, byte [rip + 0x13]
lea rsi, byte [rip + 0x1235]
lea rsi, byte [rip + 0x12345679]
lea rsi, byte[rbx]
lea rsi, byte [rcx + 0x14]
lea rsi, byte [rdx + 0x15]
lea rsi, byte [rbx + 0x1235]
lea rsi, byte [rbx + 0x12345679]
lea rsi, byte [rbx + rcx]
lea rsi, byte [rbx + 4 * rcx]
lea rsi, byte [rbx + rcx + 0x13]
lea rsi, byte [rbx + rcx + 0x1235]
lea rsi, byte [rbx + rcx + 0x12345679]
lea rsi, byte [rbx + 4 * rcx + 0x13]
lea rsi, byte [rbx + 4 * rcx + 0x1235]
lea rsi, byte [rbx + 8 * rcx + 0x12345679]
lea rsi, byte [4 * rcx]
lea rsi, byte [4 * rcx + 0x13]
lea rsi, byte [4 * rcx + 0x1235]
lea rsi, byte [4 * rcx + 0x12345679]
lea rsi, byte [rbp]
lea rsi, byte [rbp + 0x12]
lea rsi, byte [rbp + 0x1234]
lea rsi, byte [rbp + 0x12345678]
lea rsi, byte [4 * rbp]
lea rsi, byte [4 * rbp + 0x12]
lea rsi, byte [4 * rbp + 0x1234]
lea rsi, byte [4 * rbp + 0x12345678]
lea rsi, byte [rbx + 4 * rbp]
lea rsi, byte [rbx + 4 * rbp + 0x12]
lea rsi, byte [rbx + 4 * rbp + 0x1234]
lea rsi, byte [rbx + 4 * rbp + 0x12345678]
lea rsi, byte [rsp]
lea rsi, byte [rsp + 0x12]
lea rsi, byte [rsp + 0x1234]
lea rsi, byte [rsp + 0x12345678]
lea rsi, byte [rsp + rax]
lea rsi, byte [rsp + rbp]
lea rsi, byte [rsp + 2*rbp]
lea rsi, byte [rsp + 4*rbp]
lea rsi, byte [rsp + 8*rbp]
lea rsi, byte [rax]
lea rsi, byte [rcx]
lea rsi, byte [rdx]
lea rsi, byte [rbx]
lea rsi, byte [rsp]
lea rsi, byte [rbp]
lea rsi, byte [rsi]
lea rsi, byte [rdi]
lea rsi, byte [rax + 2*rax]
lea rsi, byte [rcx + 2*rcx]
lea rsi, byte [rdx + 2*rdx]
lea rsi, byte [rbx + 2*rbx]
lea rsi, byte [rbp + 2*rbp]
lea rsi, byte [rsi + 2*rsi]
lea rsi, byte [rdi + 2*rdi]
lea rdi, byte [rip + 0x13]
lea rdi, byte [rip + 0x1235]
lea rdi, byte [rip + 0x12345679]
lea rdi, byte[rbx]
lea rdi, byte [rcx + 0x14]
lea rdi, byte [rdx + 0x15]
lea rdi, byte [rbx + 0x1235]
lea rdi, byte [rbx + 0x12345679]
lea rdi, byte [rbx + rcx]
lea rdi, byte [rbx + 4 * rcx]
lea rdi, byte [rbx + rcx + 0x13]
lea rdi, byte [rbx + rcx + 0x1235]
lea rdi, byte [rbx + rcx + 0x12345679]
lea rdi, byte [rbx + 4 * rcx + 0x13]
lea rdi, byte [rbx + 4 * rcx + 0x1235]
lea rdi, byte [rbx + 8 * rcx + 0x12345679]
lea rdi, byte [4 * rcx]
lea rdi, byte [4 * rcx + 0x13]
lea rdi, byte [4 * rcx + 0x1235]
lea rdi, byte [4 * rcx + 0x12345679]
lea rdi, byte [rbp]
lea rdi, byte [rbp + 0x12]
lea rdi, byte [rbp + 0x1234]
lea rdi, byte [rbp + 0x12345678]
lea rdi, byte [4 * rbp]
lea rdi, byte [4 * rbp + 0x12]
lea rdi, byte [4 * rbp + 0x1234]
lea rdi, byte [4 * rbp + 0x12345678]
lea rdi, byte [rbx + 4 * rbp]
lea rdi, byte [rbx + 4 * rbp + 0x12]
lea rdi, byte [rbx + 4 * rbp + 0x1234]
lea rdi, byte [rbx + 4 * rbp + 0x12345678]
lea rdi, byte [rsp]
lea rdi, byte [rsp + 0x12]
lea rdi, byte [rsp + 0x1234]
lea rdi, byte [rsp + 0x12345678]
lea rdi, byte [rsp + rax]
lea rdi, byte [rsp + rbp]
lea rdi, byte [rsp + 2*rbp]
lea rdi, byte [rsp + 4*rbp]
lea rdi, byte [rsp + 8*rbp]
lea rdi, byte [rax]
lea rdi, byte [rcx]
lea rdi, byte [rdx]
lea rdi, byte [rbx]
lea rdi, byte [rsp]
lea rdi, byte [rbp]
lea rdi, byte [rsi]
lea rdi, byte [rdi]
lea rdi, byte [rax + 2*rax]
lea rdi, byte [rcx + 2*rcx]
lea rdi, byte [rdx + 2*rdx]
lea rdi, byte [rbx + 2*rbx]
lea rdi, byte [rbp + 2*rbp]
lea rdi, byte [rsi + 2*rsi]
lea rdi, byte [rdi + 2*rdi]
