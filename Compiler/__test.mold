class Parser
endclass

import 'AST.mold'
import 'ASTTranslator.mold'
import 'ASTTranslatorMIR1.mold'
import 'MIRQuadCollector.mold'
import 'MIRQuadTypeGuess.mold'
import 'MIRQuadTypeConvert.mold'
import 'MIRQuadOptimizer.mold'
import 'CodeGeneratorX64.mold'
import '1.ast'

mirQuadCollector   = new MIRQuadCollector()
mirQuadTypeGuess   = new MIRQuadTypeGuess()
mirQuadTypeConvert = new MIRQuadTypeConvert()
mirQuadOptimizer   = new MIRQuadOptimizer()

astTranslator = new ASTTranslatorMIR1()

#astTranslator.connectTo(mirQuadCollector)
#astTranslator.connectTo(mirQuadOptimizer)

t = astTranslator
t = t.connectTo(mirQuadOptimizer)
t = t.connectTo(mirQuadTypeGuess)
t = t.connectTo(mirQuadTypeConvert)
t = t.connectTo(mirQuadCollector)

astTranslator.run(ast)

# TODO: Auto flush on stream end.
mirQuadTypeGuess.flush()

mirQuadCollector.printQuads()

# Generate x64 code.
code = astTranslator.code
code.quads = mirQuadCollector.getQuads()

codeGenerator = new CodeGeneratorX64()
codeGenerator.run(code)
